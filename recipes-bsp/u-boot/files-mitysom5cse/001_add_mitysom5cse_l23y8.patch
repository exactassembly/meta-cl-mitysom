diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
index 3f32b34264..b21a74bc45 100644
--- a/arch/arm/dts/Makefile
+++ b/arch/arm/dts/Makefile
@@ -340,6 +340,9 @@ dtb-$(CONFIG_TARGET_SOCFPGA_CL_MITYSOM_5CS) +=		\
 	socfpga_mitysom5csx-h6-4ya_devkit.dtb		\
 	socfpga_mitysom5csx-h6-53b_devkit.dtb
 
+dtb-$(CONFIG_TARGET_SOCFPGA_CL_MITYSOM_5CSE) +=		\
+	socfpga_mitysom5cse-l2-3y8_empty.dtb
+
 dtb-$(CONFIG_TARGET_DRA7XX_EVM) += dra72-evm.dtb dra7-evm.dtb	\
 	dra72-evm-revc.dtb dra71-evm.dtb dra76-evm.dtb
 dtb-$(CONFIG_TARGET_AM57XX_EVM) += am57xx-beagle-x15.dtb \
diff --git a/arch/arm/dts/socfpga_mitysom5cse-l2-3y8_empty-u-boot.dtsi b/arch/arm/dts/socfpga_mitysom5cse-l2-3y8_empty-u-boot.dtsi
new file mode 100644
index 0000000000..1521f669fe
--- /dev/null
+++ b/arch/arm/dts/socfpga_mitysom5cse-l2-3y8_empty-u-boot.dtsi
@@ -0,0 +1,22 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * U-Boot additions
+ *
+ * Copyright (C) 2012 Altera Corporation <www.altera.com>
+ * Copyright (c) 2018 Simon Goldschmidt
+ * Copyright (C) 2020 Critical Link LLC <www.criticallink.com>
+ */
+
+/*
+ * This dtsi is automagically included by the dts with the matching prefix
+ * (before "-u-boot.dtsi"). It pulls in our U-Boot-specific changes so the
+ * main dts can stay synced with its Linux counterpart.
+ */
+
+#include "socfpga_mitysom5cs-u-boot.dtsi"
+
+/{
+	/* With CONFIG_DISPLAY_BOARDINFO or CONFIG_DISPLAY_BOARDINFO_LATE, this
+	 * model string is displayed in the console */
+	model = "MitySOM-5CSE-L2-3Y8 Altera SOCFPGA Cyclone V";
+};
diff --git a/arch/arm/dts/socfpga_mitysom5cse-l2-3y8_empty.dts b/arch/arm/dts/socfpga_mitysom5cse-l2-3y8_empty.dts
new file mode 100644
index 0000000000..aebfced133
--- /dev/null
+++ b/arch/arm/dts/socfpga_mitysom5cse-l2-3y8_empty.dts
@@ -0,0 +1,53 @@
+#include "socfpga_mitysom5cse.dtsi"
+#include <dt-bindings/interrupt-controller/irq.h>
+#include <dt-bindings/gpio/gpio.h>
+
+/ {
+	aliases {
+		/* this allow the ethaddr uboot environmnet variable contents
+		 * to be added to the gmac1 device tree blob.
+		 */
+		ethernet0 = &gmac1;
+	};
+
+};
+
+&i2c1 {
+	speed-mode = <0>;
+	status = "okay";
+    /* Power Monitor */
+	ltc2945@6F {
+		compatible = "ltc2945";
+		reg = <0x6F>;
+    };
+};
+
+&mmc {
+	status = "okay";
+	num-slots = <1>;
+	broken-cd;
+	cap-mmc-highspeed;
+	cap-sd-highspeed;
+	altr,dw-mshc-ciu-div = <3>;
+	altr,dw-mshc-sdr-timing = <0 3>;
+	bus-width = <4>;
+};
+
+&gmac1 {
+	status = "okay";
+	phy-mode = "rgmii";
+
+	phy-handle = <&phy1>;
+	max-frame-size = <3800>;
+
+	snps,reset-delays-us = <0 10000 1000000>;
+	snps,reset-gpio = <&porta 28 GPIO_ACTIVE_LOW>;
+	snps,reset-active-low;
+	mdio0 {
+		compatible = "snps,dwmac-mdio";
+		phy1: ethernet-phy@0 {
+			reg = <0>;
+		};
+	};
+
+};
diff --git a/arch/arm/mach-socfpga/Kconfig b/arch/arm/mach-socfpga/Kconfig
index ad3b902db5..3107808b52 100644
--- a/arch/arm/mach-socfpga/Kconfig
+++ b/arch/arm/mach-socfpga/Kconfig
@@ -176,6 +176,10 @@ config TARGET_SOCFPGA_CL_MITYSOM_5CS
 	bool "Critical Link MitySOM_5CSx (Cyclone V)"
 	select TARGET_SOCFPGA_CYCLONE5
 
+config TARGET_SOCFPGA_CL_MITYSOM_5CSE
+	bool "Critical Link MitySOM_5CSE (Cyclone V) [xa patch]"
+	select TARGET_SOCFPGA_CYCLONE5
+
 endchoice
 
 config SYS_BOARD
@@ -195,6 +199,7 @@ config SYS_BOARD
 	default "stratix10-socdk" if TARGET_SOCFPGA_STRATIX10_SOCDK
 	default "vining_fpga" if TARGET_SOCFPGA_SAMTEC_VINING_FPGA
 	default "mitysom-5cs" if TARGET_SOCFPGA_CL_MITYSOM_5CS
+	default "mitysom-5cse" if TARGET_SOCFPGA_CL_MITYSOM_5CSE
 
 config SYS_VENDOR
 	default "intel" if TARGET_SOCFPGA_AGILEX_SOCDK
@@ -211,6 +216,7 @@ config SYS_VENDOR
 	default "terasic" if TARGET_SOCFPGA_TERASIC_DE10_NANO
 	default "terasic" if TARGET_SOCFPGA_TERASIC_SOCKIT
 	default "cl" if TARGET_SOCFPGA_CL_MITYSOM_5CS
+	default "cl" if TARGET_SOCFPGA_CL_MITYSOM_5CSE
 
 config SYS_SOC
 	default "socfpga"
@@ -232,5 +238,6 @@ config SYS_CONFIG_NAME
 	default "socfpga_stratix10_socdk" if TARGET_SOCFPGA_STRATIX10_SOCDK
 	default "socfpga_vining_fpga" if TARGET_SOCFPGA_SAMTEC_VINING_FPGA
 	default "socfpga_mitysom_5cs" if TARGET_SOCFPGA_CL_MITYSOM_5CS
+	default "socfpga_mitysom_5cse" if TARGET_SOCFPGA_CL_MITYSOM_5CSE
 
 endif
diff --git a/board/cl/mitysom-5cse/Makefile b/board/cl/mitysom-5cse/Makefile
new file mode 100644
index 0000000000..66f47287d6
--- /dev/null
+++ b/board/cl/mitysom-5cse/Makefile
@@ -0,0 +1,26 @@
+#
+# (C) Copyright 2001-2006
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+# (C) Copyright 2010, Thomas Chou <thomas@wytron.com.tw>
+#
+# See file CREDITS for list of people who contributed to this
+# project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+obj-y	+= mitysom-5cs.o
+obj-y	+= config_block.o
diff --git a/board/cl/mitysom-5cse/config_block.c b/board/cl/mitysom-5cse/config_block.c
new file mode 100644
index 0000000000..c9ba15e322
--- /dev/null
+++ b/board/cl/mitysom-5cse/config_block.c
@@ -0,0 +1,752 @@
+/*
+ * config_block.c
+ *
+ *  Created on: Mar 18, 2010
+ *      Author: mikew
+ */
+#include <common.h>
+#include <command.h>
+#include <cli.h>
+#include <malloc.h>
+#include <asm/setup.h>
+
+#include "config_block.h"
+
+static struct I2CFactoryConfig default_factory_config = {
+	.ConfigMagicWord = CONFIG_I2C_MAGIC_WORD,
+	.ConfigVersion = CONFIG_I2C_VERSION,
+	.MACADDR = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
+	.SerialNumber = 0,
+	.FpgaType = 0, /* Leave FpgaType in struct to maintain compatibilty across products */
+	.ModelNumber = { '\0' }
+};
+
+static struct MacAddressBlock default_2nd_mac_config = {
+	.MacAddress = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
+};
+static struct RtcCalBlock default_rtc_cal_data = {
+	.RtcCalVal = 0x00
+};
+
+struct I2CFactoryConfig factory_config_block;
+struct GenericDataBlock *generic_data_block = NULL;
+
+typedef enum PrintType { eeInfo, eeDebug, eeWarning, eeError } PrintType;
+static void print_console(PrintType type, const char *str, ...)
+{
+	switch(type)
+	{
+		case eeInfo:
+			printf( "Info - ");
+			break;
+		case eeWarning:
+			printf("Warning - ");
+			break;
+		case eeError:
+			printf("Error - ");
+			break;
+		case eeDebug:
+#ifdef DEBUG
+			printf("Debug - ");
+#else
+			return;
+#endif
+			break;
+		default:
+			printf("Unknown - ");
+	}
+
+	va_list args;
+	va_start(args, str);
+	vprintf(str, args);
+	printf("\n");
+	va_end(args);
+}
+
+static struct GenericDataBlock* create_generic_block(u16 type, u16 size, uchar *data)
+{
+	print_console(eeDebug, "Creating Gen Block|Type: %d, Size: %d", type, size);
+	GenericDataBlock *block = malloc(sizeof(GenericDataBlock));
+	if(block != NULL)
+	{
+		block->Header.MagicWord = CONFIG_I2C_MAGIC_WORD;
+		block->Header.Type = type;
+		block->Header.Size = size;
+		block->Data = (uchar*)malloc(size);
+		if(block->Data == NULL)
+		{
+			free(block);
+			return NULL;
+		}
+		memcpy(block->Data, data, size);
+		block->Next = NULL;
+				
+		print_console(eeDebug, "Created Gen Block|Type: %d, Size: %d", block->Header.Type, block->Header.Size);
+	}
+
+	return block;
+}
+
+static void add_generic_block(struct GenericDataBlock* block)
+{
+	GenericDataBlock* node;
+
+	/* Set block Next pointer to NULL */
+	block->Next = NULL;
+
+	if(generic_data_block == NULL)
+	{
+		/* No blocks in our list, this will be the first */
+		print_console(eeDebug, "Block list empty, adding node(%04X) to head", block->Header.Type);
+		generic_data_block = block;
+	}
+	else
+	{
+		/* Go search for the end of the list */
+		node = generic_data_block;
+		while(node->Next != NULL)
+		{
+			node = node->Next;
+		}
+
+		/* End of the list, point to the new block */
+		node->Next = block;
+		print_console(eeDebug, "Adding node(%04X) to end of block list", block->Header.Type);
+	}
+}
+
+static GenericDataBlock* get_generic_block(GenericType type)
+{
+	GenericDataBlock* node = generic_data_block;
+
+	while(node != NULL)
+	{
+		print_console(eeDebug, "Search Gen Block|Type: %d, Size: %d", node->Header.Type, node->Header.Size);
+		if(node->Header.Type == type)
+		{
+			print_console(eeDebug, "Found generic block(%04X)", node->Header.Type);
+			return node;
+		}
+
+		node = node->Next;
+	}
+
+	print_console(eeInfo, "Didn't find block");
+	return NULL;
+}
+
+MacAddressBlock* get_2nd_mac_address(void)
+{
+	GenericDataBlock *block = get_generic_block(ee2ndMAC);
+	MacAddressBlock *mac = NULL; 
+	if(block == NULL)
+	{
+		print_console(eeDebug, "No 2nd MAC address in list, loading defaults");
+		/* No 2nd mac address in list, so make one with defaults */
+		block = create_generic_block(ee2ndMAC, 
+				sizeof(MacAddressBlock), (uchar*)&default_2nd_mac_config);
+		if(block != NULL)
+		{
+			print_console(eeDebug, "Adding default 2nd mac to list");
+			add_generic_block(block);
+			mac = (MacAddressBlock*)block->Data;
+		}
+	}
+	else
+	{
+		print_console(eeDebug, "Found 2nd MAC, returning");
+		mac = (MacAddressBlock*)block->Data;
+	}
+	return mac;
+}
+
+RtcCalBlock* get_rtc_cal(void)
+{
+	GenericDataBlock *block = get_generic_block(eeRtcCal);
+	RtcCalBlock *rtc = NULL;
+	if(block == NULL)
+	{
+		print_console(eeDebug, "No RTC Cal data in list, loading defaults");
+		/* No RTC cal in list, so make one with defaults */
+		block = create_generic_block(eeRtcCal,
+				sizeof(RtcCalBlock), (uchar*)&default_rtc_cal_data);
+		if(block != NULL)
+		{
+			print_console(eeDebug, "Adding default RTC Cal data to list");
+			add_generic_block(block);
+			rtc = (RtcCalBlock*)block->Data;
+		}
+	}
+	else
+	{
+		print_console(eeDebug, "Found RTC Cal Data, returning");
+		rtc = (RtcCalBlock*)block->Data;
+	}
+	return rtc;
+}
+
+
+/**
+ * get_factory_config_version
+ * return the version of the factory config block or 0xFFFFFFFF if invalid
+ */
+static u32 get_factory_config_version(void)
+{
+	int i = 0;
+	u32 rv = 0xFFFFFFFF;
+	u32 data[2] = {0,0};
+	i = eeprom_read(CONFIG_SYS_I2C_EEPROM_ADDR, 0x00, (uchar*)data, sizeof(data));
+	if (0 != i)
+	{
+		print_console(eeError, "Failure reading Factory Configuration Version Info");
+	}
+	if(CONFIG_I2C_MAGIC_WORD == data[0])
+	{
+		rv = data[1];
+	}
+	return rv;
+}
+
+/**
+ * get_factory_config_size
+ * \return the size of the factory config block or -1 on error
+ */
+static int get_factory_config_size(void)
+{
+	int rv = -1;
+	u32 version = get_factory_config_version();
+	switch(version)
+	{
+		case CONFIG_I2C_VERSION_1_1:
+		case CONFIG_I2C_VERSION_1_2:
+			rv = sizeof(struct I2CFactoryConfig);
+			break;
+		case CONFIG_I2C_VERSION_1_3:
+			rv = sizeof(struct I2CFactoryConfigV3);
+			break;
+		default:
+			break;
+	}
+	return rv;
+}
+
+static u32 calc_checksum(uchar* data, u16 size)
+{
+	u32 sum = 0;
+	int i;
+
+	for (i = 0; i < size; i++)
+	{
+		sum += *data++;
+	}
+
+	return sum;
+}
+
+/* Only used via do_factoryconfig, so don't build for SPL */
+#ifndef CONFIG_SPL_BUILD
+static int put_generic_data_block(GenericDataBlock* node, int addr)
+{
+	/* Write out header */
+	int i = 0;
+	int offset = 0;
+	int ret = 0;
+
+	uchar *tmp = (uchar*)&node->Header;
+	for(i = 0; i < sizeof(GenericDataBlockHeader); i++)
+	{
+		ret |= eeprom_write(CONFIG_SYS_I2C_EEPROM_ADDR, addr+(offset++), tmp++, 1);
+	}
+	/* Write out Data */
+	tmp = (uchar*)node->Data;
+	for(i = 0; i < node->Header.Size; i++)
+	{
+		ret |= eeprom_write(CONFIG_SYS_I2C_EEPROM_ADDR, addr+(offset++), tmp++, 1);
+	}
+	/* Calc/writeout checksum */
+	u32 sumHeader = calc_checksum((uchar*)&node->Header, sizeof(GenericDataBlockHeader));
+	u32 sumData = calc_checksum((uchar*)node->Data, node->Header.Size);
+	u32 sumGen = sumHeader + sumData;
+	tmp = (uchar*)&sumGen;
+	for(i = 0; i < sizeof(u32); i++)
+	{
+		ret |= eeprom_write(CONFIG_SYS_I2C_EEPROM_ADDR, addr+(offset++), tmp++, 1);
+	}
+
+	if(ret != 0)
+		offset = 0;
+
+	return offset;
+}
+#endif // CONFIG_SPL_BUILD
+
+/* Only used via do_factoryconfig, so don't build for SPL */
+#ifndef CONFIG_SPL_BUILD
+static int put_factory_config_block(void)
+{
+	int i, ret;
+	uchar* tmp;
+	unsigned int addr = 0x00;
+	GenericDataBlock* block = NULL;
+
+	/* Set the magic word/version */
+	factory_config_block.ConfigMagicWord = CONFIG_I2C_MAGIC_WORD;
+	factory_config_block.ConfigVersion = CONFIG_I2C_VERSION;
+
+	/* Write out factory config */
+	tmp = (uchar*)&factory_config_block;
+	ret = 0;
+	for (i = 0; i < sizeof(factory_config_block); i++)
+	{
+		ret |= eeprom_write(CONFIG_SYS_I2C_EEPROM_ADDR, addr++, tmp++, 1);
+	}
+
+	/* Calculate and writeout the factory config block check sum */
+	u16 fcSum = calc_checksum((uchar*)&factory_config_block, sizeof(struct I2CFactoryConfig));
+	tmp = (uchar*)&fcSum;
+	for (i = 0; i < sizeof(u16); i++)
+	{
+		ret |= eeprom_write(CONFIG_SYS_I2C_EEPROM_ADDR, addr++, tmp++, 1);
+	}
+
+	/* Add the 2nd MAC address */
+	/* call get_2nd_mac_address() to make sure its generic block exists first */
+	if (get_2nd_mac_address() == NULL)
+		return 1;
+	block = get_generic_block(ee2ndMAC);
+	addr += put_generic_data_block(block, addr);
+
+	/* Add the RTC Cal block */
+	/* call get_rtc_cal() to make sure its generic block exists first */
+	if (get_rtc_cal() == NULL)
+		return 1;
+	block = get_generic_block(eeRtcCal);
+	addr += put_generic_data_block(block, addr);
+
+	/* Blank out the next 4 bytes in EEPROM, so there will be no false magic word readings */
+	for(i = 0; i < sizeof(u32); i++)
+	{
+		ret |= eeprom_write(CONFIG_SYS_I2C_EEPROM_ADDR, addr++, 0, 1);
+	}
+
+	if (ret) {
+		print_console(eeError, "Error Writing Factory Configuration Block");
+	}
+	else {
+		print_console(eeInfo, "Factory Configuration Block Saved"); 
+	}
+	return ret;
+}
+#endif // CONFIG_SPL_BUILD
+
+static int is_known_generic_type(int type)
+{
+	switch(type)
+	{
+		case ee2ndMAC:
+		case eeRtcCal:
+			return 1;
+	}
+
+	return 0;
+}
+
+typedef enum ParseStatus 
+{
+	eeSuccess, 
+	eeNoMagicWord, 
+	eeUnknownConfig, 
+	eeI2CError, 
+	eeBadChecksum, 
+	eeMallocError, 
+	eeBadGenBlock
+} ParseStatus;
+static ParseStatus parse_factory_config(void)
+{
+	int status;
+	u16 calcSum, readSum;
+	uchar buffer[sizeof(struct I2CFactoryConfigV3)];
+	int configSize;
+
+	/* Grab the base config size */
+	configSize = get_factory_config_size();
+	if(configSize == -1)
+	{
+		print_console(eeDebug, "Couldn't figure out config size");
+		return eeUnknownConfig;
+	}
+
+	/* Read data from eeprom */
+	status = eeprom_read(CONFIG_SYS_I2C_EEPROM_ADDR, 0x00, buffer, configSize);
+	if(status != 0)
+		return eeI2CError;
+
+	/* Check Magic Word */
+	struct I2CFactoryConfig *config = (struct I2CFactoryConfig*)buffer;
+	if(config->ConfigMagicWord != CONFIG_I2C_MAGIC_WORD)
+	{
+		print_console(eeDebug, "No magic word found for factoryconfig");
+		return eeNoMagicWord;
+	}
+
+	/* Read base config checksum */
+	status = eeprom_read(CONFIG_SYS_I2C_EEPROM_ADDR, configSize,
+			(uchar*)&readSum, sizeof(u16));
+	if(status != 0)
+		return eeI2CError;
+
+	/* Calculate the checksum of the config we just read */
+	calcSum = calc_checksum(buffer, configSize);
+
+	/* Check if the calculated checksum vs stored */
+	if(calcSum != readSum)
+	{
+		print_console(eeDebug, "factoryconfig checksum didn't match, Expected: %04X Actual: %04X", readSum, calcSum);
+		return eeBadChecksum;
+	}
+
+	/* Set the factory config block */
+	memcpy(&factory_config_block, buffer, sizeof(struct I2CFactoryConfig));
+
+	/* If this is a config 1.3 block, convert the 2nd MAC address to a generic block */
+	if(factory_config_block.ConfigVersion == CONFIG_I2C_VERSION_1_3)
+	{
+		print_console(eeDebug, "Version 1.3 detected, converting to 1.2");
+		struct I2CFactoryConfigV3 *config3 = (struct I2CFactoryConfigV3*)buffer;
+		/* Set the mac 2 address block */
+		MacAddressBlock *mac = get_2nd_mac_address();
+		memcpy(mac->MacAddress, config3->MACADDR2, sizeof(MacAddressBlock));
+	}
+	
+	/* Go through all generic blocks and add them to the list */
+	int flashIndex = configSize + sizeof(u16);
+	while((CONFIG_SYS_EEPROM_SIZE - flashIndex) > sizeof(GenericDataBlockHeader))
+	{
+		/* Allocate a generic block */
+		GenericDataBlock *block = malloc(sizeof(GenericDataBlock));
+		if(block == NULL)
+			return eeMallocError;
+
+		/* Read in the generic header */
+		status = eeprom_read(CONFIG_SYS_I2C_EEPROM_ADDR, flashIndex,
+				(uchar*)&block->Header, sizeof(GenericDataBlockHeader));
+		flashIndex += sizeof(GenericDataBlockHeader);
+		if(status != 0)
+		{
+			free(block);
+			return eeI2CError;
+		}
+		 
+		/* Check if this a generic block by checking for the magic word */	
+		if(block->Header.MagicWord != CONFIG_I2C_MAGIC_WORD)
+		{
+			print_console(eeDebug, "No magic word for block, must be done");
+			free(block);
+			break;
+		}
+		else
+			print_console(eeDebug, "Found magic word for block(%04X), parsing", block->Header.Type);
+
+		/* Quick sanity check to see if data size is reasonable */
+		if(block->Header.Size > CONFIG_SYS_EEPROM_SIZE)
+		{
+			print_console(eeInfo, "Generic block size(%04X) too large", block->Header.Size);
+			free(block);
+			return eeBadGenBlock;
+		}
+
+		/* malloc room for the data */	
+		block->Data = malloc(block->Header.Size);
+		if(block->Data == NULL)
+		{
+			free(block);
+			return eeMallocError;
+		}
+
+		/* Read in the data */
+		status = eeprom_read(CONFIG_SYS_I2C_EEPROM_ADDR, flashIndex,
+				(uchar*)block->Data, block->Header.Size);
+		flashIndex += block->Header.Size;
+		if(status != 0)
+		{
+			free(block);
+			return eeI2CError;
+		}
+
+		/* Calculate the checksum */
+		u32 sumHeader = calc_checksum((uchar*)&block->Header, sizeof(GenericDataBlockHeader));
+		u32 sumData = calc_checksum((uchar*)block->Data, block->Header.Size);
+		u32 sumGen = sumHeader + sumData;
+		u32 readSumGen;
+
+		/* Grab generic block checksum */
+		status = eeprom_read(CONFIG_SYS_I2C_EEPROM_ADDR, flashIndex,
+				(uchar*)&readSumGen, sizeof(u32));
+		flashIndex += sizeof(u32);
+		if(status != 0)
+		{
+			free(block->Data);
+			free(block);
+			return eeI2CError;
+		}
+
+		/* Check if checksum matches stored value */
+		if(readSumGen != sumGen)
+		{
+			print_console(eeDebug, "Block's checksum didn't match, Expected: %08X Actual: %08X", readSumGen, sumGen);
+			free(block->Data);
+			free(block);
+			return eeBadGenBlock;
+		}	
+
+		/* Check to make sure this is a known type */ 
+		if(is_known_generic_type(block->Header.Type) == 0)
+		{
+			print_console(eeInfo, "Unknown generic block(%04X), skipping", block->Header.Type);
+			free(block->Data);
+			free(block);
+			/* This type is unknown, skip it */
+			continue;
+		}
+
+		/* Add this block to our list */
+		print_console(eeDebug, "Found generic block(%04X), adding to list", block->Header.Type);
+		add_generic_block(block);
+	}
+
+	return eeSuccess;
+}
+
+static void set_default_config(void)
+{
+	print_console(eeInfo, "Setting configuration to defaults");
+
+	/* Set default config */
+	memcpy(&factory_config_block, &default_factory_config, sizeof(struct I2CFactoryConfig));
+
+	/* Set default 2nd mac */
+	get_2nd_mac_address();
+
+	/* Set default RTC Cal data */
+	get_rtc_cal();
+}
+
+#define ERROR_I2C (-1)
+#define ERROR_BAD_CONFIG (1)
+/**
+ *  return value: -1 i2c access error, 1 bad factory configuration, 0 = OK
+ */
+int get_factory_config_block(void)
+{
+	ParseStatus parseStatus;
+	int status = 0;
+
+
+	/* Parse in the config */
+	parseStatus = parse_factory_config();
+
+	switch(parseStatus)
+	{
+		case eeUnknownConfig:
+		case eeNoMagicWord:
+		case eeBadChecksum:
+			print_console(eeError, "Factory Configuration Invalid");
+			print_console(eeInfo, "You must set the factory configuration to make permanent");
+			status = ERROR_BAD_CONFIG;
+			set_default_config();
+			break;
+		case eeI2CError:
+			print_console(eeError, "I2C error will reading Factory Configuration");
+			status = ERROR_I2C;
+			set_default_config();
+			break;
+		case eeMallocError:
+			print_console(eeError, "malloc Failed");
+			status = ERROR_BAD_CONFIG;
+			set_default_config();
+			break;
+		case eeBadGenBlock:
+			print_console(eeWarning, "Generic Configuration Block Invalid");
+			status = ERROR_BAD_CONFIG;
+			break;
+		case eeSuccess:
+			status = 0;
+			break;
+	}
+
+
+	return status;
+}
+
+/* This is a trivial atoi implementation since we don't have one available */
+int atoi(char *string)
+{
+	int length;
+	int retval = 0;
+	int i;
+	int sign = 1;
+
+	length = strlen(string);
+	for (i = 0; i < length; i++) {
+		if (0 == i && string[0] == '-') {
+			sign = -1;
+			continue;
+		}
+		if (string[i] > '9' || string[i] < '0') {
+			break;
+		}
+		retval *= 10;
+		retval += string[i] - '0';
+	}
+	retval *= sign;
+	return retval;
+}
+
+void get_board_serial(struct tag_serialnr *sn)
+{
+	sn->low = factory_config_block.SerialNumber;
+	sn->high = 0;
+}
+
+/* Only used via do_factoryconfig, so don't build for SPL */
+#ifndef CONFIG_SPL_BUILD
+/**
+ * Set the factory config block mac address from an ascii string
+ * of the form xx:xx:xx:xx:xx:xx
+ */
+static void set_mac_from_string(u8* mac,char *buffer)
+{
+	char *p = buffer;
+	int i=0;
+	for (i = 0; i < 6; i++) {
+		int j = 0;
+		while(p[j] && (p[j] != ':')) j++;
+		if (1) {
+			unsigned int t;
+			char temp = p[j];
+			p[j] = 0;
+			t = simple_strtoul(p, NULL, 16);
+			p[j] = temp;
+			mac[i] = t&0xFF;
+		}
+		p = &p[j];
+		if (*p) p++;
+	}
+}
+#endif // CONFIG_SPL_BUILD
+
+/* Only build u-boot commands for u-boot proper, not the SPL */
+#ifndef CONFIG_SPL_BUILD
+static int do_factoryconfig(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
+{
+	int ret = CMD_RET_FAILURE;
+	char *buffer = (char*)malloc(80 * sizeof(char));
+	char *strcopy = NULL;
+
+	if (argc == 1) {
+		/* List configuration info */
+		puts ("Factory Configuration:\n");
+		printf("Config Version : %d.%d\n",
+				factory_config_block.ConfigVersion>>16,
+				factory_config_block.ConfigVersion&0xFFFF);
+		printf("MAC Address    : %02X:%02X:%02X:%02X:%02X:%02X\n",
+				factory_config_block.MACADDR[0],
+				factory_config_block.MACADDR[1],
+				factory_config_block.MACADDR[2],
+				factory_config_block.MACADDR[3],
+				factory_config_block.MACADDR[4],
+				factory_config_block.MACADDR[5]);
+		MacAddressBlock *mac2 = get_2nd_mac_address();
+		printf("MAC Address2   : %02X:%02X:%02X:%02X:%02X:%02X\n",
+				mac2->MacAddress[0],
+				mac2->MacAddress[1],
+				mac2->MacAddress[2],
+				mac2->MacAddress[3],
+				mac2->MacAddress[4],
+				mac2->MacAddress[5]);
+
+		printf("Serial Number  : %d\n",
+				factory_config_block.SerialNumber);
+		printf("Model Number   : %s\n",
+				factory_config_block.ModelNumber);
+		RtcCalBlock *rtc_cal = get_rtc_cal();
+		printf("RTC Cal Value  : %d\n",
+				rtc_cal->RtcCalVal);
+	} else {
+		unsigned int i;
+		if (0 == strncmp(argv[1],"set",3)) {
+			sprintf(buffer, "%02X:%02X:%02X:%02X:%02X:%02X",
+					factory_config_block.MACADDR[0],
+					factory_config_block.MACADDR[1],
+					factory_config_block.MACADDR[2],
+					factory_config_block.MACADDR[3],
+					factory_config_block.MACADDR[4],
+					factory_config_block.MACADDR[5]);
+			cli_readline_into_buffer ("MAC Address(1): ", buffer, 0);
+			if((strlen(buffer) == 1) && ('.' == buffer[0]))
+				goto done;
+			set_mac_from_string(factory_config_block.MACADDR,buffer);
+
+			MacAddressBlock *mac2 = get_2nd_mac_address();
+			sprintf(buffer, "%02X:%02X:%02X:%02X:%02X:%02X",
+					mac2->MacAddress[0],
+					mac2->MacAddress[1],
+					mac2->MacAddress[2],
+					mac2->MacAddress[3],
+					mac2->MacAddress[4],
+					mac2->MacAddress[5]);
+			cli_readline_into_buffer ("MAC Address(2): ", buffer, 0);
+			if((strlen(buffer) == 1) && ('.' == buffer[0]))
+				goto done;                        
+			set_mac_from_string(mac2->MacAddress,buffer);
+
+			sprintf(buffer, "%d", factory_config_block.SerialNumber);
+			cli_readline_into_buffer ("Serial Number : ", buffer, 0);
+			if((strlen(buffer) == 1) && ('.' == buffer[0]))
+				goto done;
+			i = atoi(buffer);
+			if (i > 0) factory_config_block.SerialNumber = i;
+
+			sprintf(buffer, "%s", factory_config_block.ModelNumber);
+			cli_readline_into_buffer ("Model Number  : ", buffer, 0);
+			if((strlen(buffer) == 1) && ('.' == buffer[0]))
+				goto done;
+			buffer[31] = '\0';
+			strncpy(factory_config_block.ModelNumber, buffer, 32);
+			/* make sure it is null terminated */
+			factory_config_block.ModelNumber[31] = '\0';
+
+			RtcCalBlock *rtc_cal = get_rtc_cal();
+			sprintf(buffer, "%d", rtc_cal->RtcCalVal);
+			cli_readline_into_buffer ("RTC Cal Value  : ", buffer, 0);
+			if((strlen(buffer) == 1) && ('.' == buffer[0]))
+				goto done;
+			i = atoi(buffer);
+			rtc_cal->RtcCalVal = i;
+
+		} else if (0 == strncmp(argv[1],"save",4)) {
+			put_factory_config_block();
+			print_console(eeInfo, "Configuration Saved");
+		}
+		else {
+			print_console(eeError, "Unknown Option");
+			goto done;
+		}
+	}
+	ret = CMD_RET_SUCCESS;
+done:
+	free(buffer);
+	if(strcopy)
+		free(strcopy);
+	return ret;
+}
+
+U_BOOT_CMD(factoryconfig,	CONFIG_SYS_MAXARGS,	0,	do_factoryconfig,
+		"mitysom-5csx factory config block operations",
+		"    - print current configuration\n"
+		"factoryconfig set\n"
+		"         - set new configuration (interactive)\n"
+		"factoryconfig save\n"
+		"         - write new configuration to I2C FLASH\n"
+		);
+#endif // CONFIG_SPL_BUILD
diff --git a/board/cl/mitysom-5cse/config_block.h b/board/cl/mitysom-5cse/config_block.h
new file mode 100644
index 0000000000..0ce2cd5f34
--- /dev/null
+++ b/board/cl/mitysom-5cse/config_block.h
@@ -0,0 +1,74 @@
+#ifndef CONFIG_BLOCK_H_
+#define CONFIG_BLOCK_H_
+
+#define CONFIG_I2C_MAGIC_WORD	0x012C0138
+#define CONFIG_I2C_VERSION_1_1	0x00010001 /* Never released */
+#define CONFIG_I2C_VERSION_1_2	0x00010002 /* Base config */
+#define CONFIG_I2C_VERSION_1_3	0x00010003 /* Base config with MACADDR2 */
+#define CONFIG_I2C_VERSION	CONFIG_I2C_VERSION_1_2
+
+struct I2CFactoryConfig {
+	u32               ConfigMagicWord;  /** CONFIG_I2C_MAGIC_WORD */
+	u32               ConfigVersion;    /** CONFIG_I2C_VERSION */
+	u8                MACADDR[6];       /** MAC Address assigned to part */
+	/* Two bytes padding, written to EEPROM */
+	u32               FpgaType;         /** Not Used */
+	u32               Spare;            /** Not Used */
+	u32               SerialNumber;     /** serial number assigned to part */
+	char              ModelNumber[32];  /** board model number, human readable text, NULL terminated */
+};
+
+/* NOTE: This struct was added in order to handle a 2nd MAC address.
+ * Unfortunately it is not backwards compatible with older versions of
+ * uboot, which can only parse V2 structs. This struct will be kept for
+ * parsing any EEPROMs with V3 format but the new V2 with generic
+ * data blocks for storing the 2nd MAC address will be written if
+ * factoryconfig save is used
+ */
+struct I2CFactoryConfigV3 {
+	u32               ConfigMagicWord;  /** CONFIG_I2C_MAGIC_WORD */
+	u32               ConfigVersion;    /** CONFIG_I2C_VERSION */
+	u8                MACADDR[6];       /** MAC Address assigned to part */
+	/* Two bytes padding, written to EEPROM */
+	u32               FpgaType;         /** Not Used */
+	u32               Spare;            /** Not Used */
+	u32               SerialNumber;     /** serial number assigned to part */
+	char              ModelNumber[32];  /** board model number, human readable text, NULL terminated */
+	u8                MACADDR2[6];      /** 2nd MAC Address assigned to part */
+	/* Two bytes padding, written to EEPROM */
+};
+
+typedef struct GenericDataBlockHeader {
+	u32 MagicWord;
+	u16 Type;
+	u16 Size;
+} GenericDataBlockHeader;
+
+struct GenericDataBlock;
+typedef struct GenericDataBlock {
+	struct GenericDataBlockHeader Header;
+	uchar *Data;
+	struct GenericDataBlock *Next;
+}GenericDataBlock;
+
+typedef enum GenericType {
+	ee2ndMAC = 0x0000,
+	eeRtcCal = 0x0001,
+} GenericType;
+
+typedef struct MacAddressBlock {
+	u8 MacAddress[6];
+	/* Two bytes padding, NOT written to EEPROM because we write length Header.Size */
+}MacAddressBlock;
+
+typedef struct RtcCalBlock {
+	s32 RtcCalVal; /* PPM * 10 to allow for signal decimal percision */
+}RtcCalBlock;
+
+extern struct I2CFactoryConfig  factory_config_block;
+extern struct GenericDataBlock *generic_data_block;
+extern int get_factory_config_block(void);
+extern MacAddressBlock* get_2nd_mac_address(void);
+extern RtcCalBlock* get_rtc_cal(void);
+
+#endif
diff --git a/board/cl/mitysom-5cse/mitysom-5cs.c b/board/cl/mitysom-5cse/mitysom-5cs.c
new file mode 100644
index 0000000000..fef6b9111c
--- /dev/null
+++ b/board/cl/mitysom-5cse/mitysom-5cs.c
@@ -0,0 +1,121 @@
+/*
+ *  Copyright (C) 2013 Critical Link LLC <www.criticallink.com>
+ *  Copyright (C) 2012 Altera Corporation <www.altera.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#include <common.h>
+#include <asm/arch/clock_manager.h>
+
+#include "config_block.h"
+
+#ifndef NUM_EEPROM_RETRIES
+#define NUM_EEPROM_RETRIES	2
+#endif
+
+/*
+ * Print Board information
+ */
+int checkboard(void)
+{
+	puts("BOARD: Critical Link MitySOM-5CSx Module\n");
+	return 0;
+}
+
+/*
+ * Read header information from EEPROM into global structure.
+ */
+static int read_factoryconfig(void)
+{
+
+	int retries, rv = 0;
+
+	for (retries = 0; retries <= NUM_EEPROM_RETRIES; ++retries)
+	{
+		if (retries) {
+			printf("Retrying [%d] ...\n", retries);
+		}
+
+		/* try and read our configuration block */
+		rv = get_factory_config_block();
+		if (rv < 0) {
+			printf("I2C Error reading factory config block\n");
+			continue; /* retry */
+		}
+		/* No I2C issues, data was either OK or not entered... */
+		if (rv > 0)
+			printf("Bad I2C configuration found\n");
+		break;
+	}
+	factory_config_block.ModelNumber[31] = '\0';
+
+	return rv;
+}
+
+/* Called after all of Altera's SPL setup */
+#ifdef CONFIG_SPL_BUILD
+void spl_board_init(void)
+{
+	/* Altera used to call this for us in the SPL, but they removed that */
+	cm_print_clock_quick_summary();
+}
+#endif
+
+int misc_init_r(void)
+{
+	char tmp[24];
+	uint8_t eth_addr[10];
+	uint8_t eth1addr[10];
+
+	read_factoryconfig();
+
+	/* Handle setting the first MAC to ethaddr env varible */
+	memcpy(eth_addr, factory_config_block.MACADDR, 6);
+	if (is_valid_ethaddr(eth_addr)) {
+		char* env_ethaddr = env_get("ethaddr");
+		sprintf((char *)tmp, "%02x:%02x:%02x:%02x:%02x:%02x", eth_addr[0],
+			eth_addr[1], eth_addr[2], eth_addr[3], eth_addr[4], eth_addr[5]);
+
+		if (!env_ethaddr || (0 != strncmp(tmp, env_ethaddr, 18)))
+			env_set("ethaddr", (char *)tmp);
+	}
+
+	/* Handle setting the second MAC to eth1addr env varible */
+	MacAddressBlock *mac2 = get_2nd_mac_address();
+	memcpy(eth1addr, mac2->MacAddress, 6);
+	if (is_valid_ethaddr(eth1addr)) {
+		char* env_ethaddr1 = env_get("eth1addr");
+		sprintf((char *)tmp, "%02x:%02x:%02x:%02x:%02x:%02x", eth1addr[0],
+			eth1addr[1], eth1addr[2], eth1addr[3], eth1addr[4], eth1addr[5]);
+
+		if (!env_ethaddr1 || (0 != strncmp(tmp, env_ethaddr1, 18)))
+			env_set("eth1addr", (char *)tmp);
+	}
+
+	/* Handle setting the RTC Cal registers to the uboot env */
+	RtcCalBlock *rtc_cal = get_rtc_cal();
+	char* env_rtccal = env_get("rtccal");
+	sprintf((char *) tmp, "%d", rtc_cal->RtcCalVal);
+	if(!env_rtccal || (0 != strcmp(tmp, env_rtccal)))
+		env_set("rtccal", (char *)tmp);
+
+	/* Set the clmodelnum variable to what is set in the factory config */
+	if(strlen(factory_config_block.ModelNumber) != 0)
+		env_set("clmodelnum", factory_config_block.ModelNumber);
+
+	/* If we return an error here, U-Boot will hang, making it more difficult
+	 * for the user to correct whatever factoryconfig error occurred */
+	return 0;
+}
diff --git a/board/cl/mitysom-5cse/qts/iocsr_config.h b/board/cl/mitysom-5cse/qts/iocsr_config.h
new file mode 100644
index 0000000000..27f3003309
--- /dev/null
+++ b/board/cl/mitysom-5cse/qts/iocsr_config.h
@@ -0,0 +1,659 @@
+/* SPDX-License-Identifier: BSD-3-Clause */
+/*
+ * Altera SoCFPGA IOCSR configuration
+ */
+
+#ifndef __SOCFPGA_IOCSR_CONFIG_H__
+#define __SOCFPGA_IOCSR_CONFIG_H__
+
+#define CONFIG_HPS_IOCSR_SCANCHAIN0_LENGTH	764
+#define CONFIG_HPS_IOCSR_SCANCHAIN1_LENGTH	1719
+#define CONFIG_HPS_IOCSR_SCANCHAIN2_LENGTH	955
+#define CONFIG_HPS_IOCSR_SCANCHAIN3_LENGTH	16766
+
+const unsigned long iocsr_scan_chain0_table[] = {
+	0x20000000,
+	0x00000000,
+	0x0FF00080,
+	0xC0000000,
+	0x0000003F,
+	0x80008000,
+	0x1000581D,
+	0x01607600,
+	0x81D80040,
+	0x00018005,
+	0x04000000,
+	0xC0004000,
+	0x08002C0E,
+	0x00B03B00,
+	0xC0EC0020,
+	0xB0008002,
+	0x02000B03,
+	0x60002000,
+	0x04001607,
+	0x00581D80,
+	0x60760010,
+	0xD8004001,
+	0x01000581,
+	0x00001000,
+};
+
+const unsigned long iocsr_scan_chain1_table[] = {
+	0x00100000,
+	0x300C0000,
+	0x300000C0,
+	0x000000C0,
+	0x000300C0,
+	0x00008000,
+	0x00080000,
+	0x20000000,
+	0x00000000,
+	0x00000080,
+	0x00020000,
+	0x00004000,
+	0x000300C0,
+	0x10000000,
+	0x0C000000,
+	0x00000030,
+	0x0000C030,
+	0x60002000,
+	0x06001607,
+	0x00581D80,
+	0x01FE0018,
+	0xF8000000,
+	0x00000007,
+	0xB0001000,
+	0x02000B03,
+	0x002C0EC0,
+	0xB03B0008,
+	0xEC003000,
+	0x008002C0,
+	0x00000800,
+	0x01000000,
+	0x00000000,
+	0x581D8004,
+	0x76001000,
+	0x00400160,
+	0x00000400,
+	0x00800000,
+	0x000B03B0,
+	0x00000003,
+	0x00000800,
+	0x00200000,
+	0x76000200,
+	0x00600160,
+	0x00000000,
+	0x16076001,
+	0x1D800600,
+	0x00100858,
+	0x3B000100,
+	0x003000B0,
+	0xC002C0EC,
+	0x0B03B000,
+	0x0EC00300,
+	0x000C002C,
+	0x00000080,
+};
+
+const unsigned long iocsr_scan_chain2_table[] = {
+	0x00100000,
+	0x40000000,
+	0x0FF00000,
+	0x00000000,
+	0x0C0300C0,
+	0x00008000,
+	0x00080000,
+	0x20000000,
+	0x00000000,
+	0x00000080,
+	0x00020000,
+	0x00004000,
+	0x00040000,
+	0x10000000,
+	0x00000000,
+	0x00000040,
+	0x00010000,
+	0x00002000,
+	0x10018060,
+	0x08000000,
+	0x00000000,
+	0x00000020,
+	0x00008000,
+	0x00001000,
+	0x00010000,
+	0x04000000,
+	0x03000000,
+	0x0000800C,
+	0x00004000,
+	0x00000800,
+};
+
+const unsigned long iocsr_scan_chain3_table[] = {
+	0x0CC20D80,
+	0x1C1000FF,
+	0x0A804001,
+	0x07900000,
+	0x08020000,
+	0x00100000,
+	0x0A800000,
+	0x07900000,
+	0x08020000,
+	0x00100000,
+	0x54500000,
+	0x40003001,
+	0x00C00551,
+	0x00000000,
+	0x00000021,
+	0x82000004,
+	0x05400000,
+	0x03C80000,
+	0x04010000,
+	0x00080000,
+	0x05400000,
+	0x03C80000,
+	0x05400000,
+	0x03C80000,
+	0xAA280000,
+	0xA0001800,
+	0x006002A8,
+	0x800AA280,
+	0x00000001,
+	0x40000002,
+	0x02A00000,
+	0x01E40000,
+	0x02A00000,
+	0x01E40000,
+	0x02A00000,
+	0x01E40000,
+	0x02A00000,
+	0x01E40000,
+	0x55140000,
+	0x50000C00,
+	0x00300154,
+	0xC0055140,
+	0x15450000,
+	0x20000300,
+	0x00040000,
+	0x50670000,
+	0x00000010,
+	0x24590000,
+	0x00001000,
+	0xA0000034,
+	0x0D000001,
+	0x40680C30,
+	0x41034010,
+	0x02081A00,
+	0x80C300D0,
+	0x34051406,
+	0x01A00410,
+	0x080D0000,
+	0x51406802,
+	0x00410340,
+	0xD000001A,
+	0x06802080,
+	0x10040000,
+	0x00200000,
+	0x10040000,
+	0x00200000,
+	0x15000000,
+	0x0F200000,
+	0x15000000,
+	0x0F200000,
+	0x01FE0000,
+	0x80000000,
+	0x01800AA2,
+	0x002A8A00,
+	0x007F8006,
+	0x00000000,
+	0x0A800001,
+	0x07900000,
+	0x0A800000,
+	0x07900000,
+	0x0A800000,
+	0x07900000,
+	0x08020000,
+	0x00100000,
+	0x54500000,
+	0x40003001,
+	0x00C00551,
+	0x00000FF0,
+	0x55140000,
+	0x80000C00,
+	0x05400000,
+	0x02480000,
+	0x04000000,
+	0x00080000,
+	0x05400000,
+	0x03C80000,
+	0x05400000,
+	0x03C80000,
+	0xAA280000,
+	0xA0001800,
+	0x006002A8,
+	0x800AA280,
+	0x2A8A0001,
+	0x40000600,
+	0x02A00040,
+	0x01E40000,
+	0x02A00000,
+	0x01E40000,
+	0x02A00000,
+	0x01E40000,
+	0x02A00000,
+	0x01E40000,
+	0x55140000,
+	0x50000C00,
+	0x00300154,
+	0xC0055140,
+	0x15450000,
+	0x20000300,
+	0x00040000,
+	0x50670000,
+	0x00000010,
+	0x24590000,
+	0x00001000,
+	0xA0000034,
+	0x0D000001,
+	0x40680C30,
+	0x41034010,
+	0x02081A00,
+	0x802080D0,
+	0x34051406,
+	0x01A00040,
+	0x080D0002,
+	0x10406802,
+	0x00410340,
+	0xD002081A,
+	0x0680C300,
+	0x10040000,
+	0x00200000,
+	0x10040000,
+	0x00200000,
+	0x15000000,
+	0x0F200000,
+	0x15000000,
+	0x0F200000,
+	0x01FE0000,
+	0x80000000,
+	0x01800AA2,
+	0x002A8A00,
+	0x007F8006,
+	0x00000000,
+	0x99300001,
+	0x34343400,
+	0xAA0D4000,
+	0x01C3A800,
+	0xAA0D4000,
+	0x01C3A800,
+	0xAA0D4000,
+	0x01C3A800,
+	0x00040100,
+	0x00000800,
+	0x00000000,
+	0x00001208,
+	0x00482000,
+	0x01000000,
+	0x00000000,
+	0x00410482,
+	0x0006A000,
+	0x0001B400,
+	0x00020000,
+	0x00000400,
+	0x0002A000,
+	0x0001E400,
+	0x5506A000,
+	0x00E1D400,
+	0x00000000,
+	0x5450090C,
+	0x00003001,
+	0x90400000,
+	0x00000000,
+	0x2020C243,
+	0x2A835000,
+	0x0070EA00,
+	0x2A835000,
+	0x0070EA00,
+	0x2A835000,
+	0x0070EA00,
+	0x00010040,
+	0x00000200,
+	0x00000000,
+	0x00000482,
+	0x00120800,
+	0x00002000,
+	0x80000000,
+	0x00104120,
+	0x00000200,
+	0xAC0D5F80,
+	0xFFFFFFFF,
+	0x14F3690D,
+	0x1A041414,
+	0x00D00000,
+	0x08864000,
+	0x71C47A02,
+	0xE3CF23DA,
+	0xF456591E,
+	0x0354A288,
+	0x821A0000,
+	0x0000D000,
+	0x06180680,
+	0xDA71C47A,
+	0x1EE3CF23,
+	0x88F45659,
+	0x000354E3,
+	0x00080200,
+	0x00001000,
+	0x00080200,
+	0x00001000,
+	0x000A8000,
+	0x00075000,
+	0x541A8000,
+	0x03875001,
+	0x10000000,
+	0x00000000,
+	0x0080C000,
+	0x41000000,
+	0x00003FC2,
+	0x00820000,
+	0xAA0D4000,
+	0x01C3A800,
+	0xAA0D4000,
+	0x01C3A800,
+	0xAA0D4000,
+	0x01C3A800,
+	0x00040100,
+	0x00000800,
+	0x00000000,
+	0x00001208,
+	0x00482000,
+	0x00008000,
+	0x00000000,
+	0x00410482,
+	0x0006A000,
+	0x0001B400,
+	0x00020000,
+	0x00000400,
+	0x00020080,
+	0x00000400,
+	0x5506A000,
+	0x00E1D400,
+	0x00000000,
+	0x0000090C,
+	0x00000010,
+	0x90400000,
+	0x00000000,
+	0x2020C243,
+	0x2A835000,
+	0x0070EA00,
+	0x2A835000,
+	0x0070EA00,
+	0x2A835000,
+	0x0070EA00,
+	0x00015000,
+	0x0000F200,
+	0x00000000,
+	0x00000482,
+	0xA0120800,
+	0x006002A8,
+	0x80000000,
+	0x00104120,
+	0x00000200,
+	0xAC0D5F80,
+	0xFFFFFFFF,
+	0x14F3690D,
+	0x1A041414,
+	0x00D00000,
+	0x18864000,
+	0x49247A06,
+	0xE3CF23D6,
+	0xF456591E,
+	0x0354E388,
+	0x821A028A,
+	0x0000D000,
+	0x00000680,
+	0xD649247A,
+	0x1EE3CF23,
+	0x88F45659,
+	0x000344A2,
+	0x00080200,
+	0x00001000,
+	0x00080200,
+	0x00001000,
+	0x000A8000,
+	0x00075000,
+	0x541A8000,
+	0x03875001,
+	0x10000000,
+	0x00000000,
+	0x0080C000,
+	0x41000000,
+	0x04000002,
+	0x00820000,
+	0x00040100,
+	0x00000800,
+	0x00040100,
+	0x00000800,
+	0x00040100,
+	0x00000800,
+	0x00040100,
+	0x00000800,
+	0x08000000,
+	0x00000000,
+	0x00000020,
+	0x00008000,
+	0x02000000,
+	0x00400000,
+	0x00020080,
+	0x00000400,
+	0x00020080,
+	0x00000400,
+	0x0002A000,
+	0x0001E400,
+	0x00020080,
+	0x00000400,
+	0x04000000,
+	0x54500000,
+	0x00003001,
+	0x00004000,
+	0x01000000,
+	0x00200000,
+	0x00010040,
+	0x00000200,
+	0x00010040,
+	0x00000200,
+	0x00010040,
+	0x00000200,
+	0x00010040,
+	0x00000200,
+	0x02000000,
+	0x00000000,
+	0x00000008,
+	0x00002000,
+	0x00800000,
+	0x00100000,
+	0x00000200,
+	0x08283380,
+	0x00000000,
+	0x00122C80,
+	0x1A000008,
+	0x00D00000,
+	0x00068000,
+	0x00003400,
+	0x000001A0,
+	0x6800000D,
+	0x03400000,
+	0x001A0000,
+	0x0000D000,
+	0x00000680,
+	0xA0000034,
+	0x0D000001,
+	0x00680000,
+	0x00034000,
+	0x00080200,
+	0x00001000,
+	0x00080200,
+	0x00001000,
+	0x00080200,
+	0x00001000,
+	0x00080200,
+	0x00001000,
+	0x10000000,
+	0x00000000,
+	0x00000040,
+	0x00010000,
+	0x04000000,
+	0x00800000,
+	0x00040100,
+	0x00000800,
+	0x00040100,
+	0x00000800,
+	0x00040100,
+	0x00000800,
+	0x00040100,
+	0x00000800,
+	0x08000000,
+	0x00000000,
+	0x00000020,
+	0x00008000,
+	0x02000000,
+	0x00400000,
+	0x00020080,
+	0x00000400,
+	0x00020080,
+	0x00000400,
+	0x00020080,
+	0x00000400,
+	0x00020080,
+	0x00000400,
+	0x04000000,
+	0x00000000,
+	0x00000010,
+	0x00004000,
+	0x01000000,
+	0x00200000,
+	0x00010040,
+	0x00000200,
+	0x00010040,
+	0x00000200,
+	0x00010040,
+	0x00000200,
+	0x00010040,
+	0x00000200,
+	0x02000000,
+	0x00000004,
+	0x00001008,
+	0x00402000,
+	0x00800000,
+	0x00100001,
+	0x00000200,
+	0x08283380,
+	0x00000000,
+	0x00102C80,
+	0x1A000008,
+	0x00D00000,
+	0x00068000,
+	0x00003400,
+	0x000001A0,
+	0x6800000D,
+	0x03400000,
+	0x001A0000,
+	0x0000D000,
+	0x00000680,
+	0xA0000034,
+	0x0D000001,
+	0x00680000,
+	0x00034000,
+	0x00080200,
+	0x00001000,
+	0x00080200,
+	0x00001000,
+	0x00080200,
+	0x00001000,
+	0x00080200,
+	0x00001000,
+	0x10000000,
+	0x00000000,
+	0x00000040,
+	0x00010000,
+	0x04000000,
+	0x00800000,
+	0x00489800,
+	0x9E1A0000,
+	0x00000200,
+	0x80000004,
+	0x00000200,
+	0x80000004,
+	0x00000200,
+	0x80000004,
+	0x00000200,
+	0x00000004,
+	0x00040000,
+	0x10000000,
+	0x00000000,
+	0x00000040,
+	0x00010000,
+	0x40002000,
+	0x00000100,
+	0x40000002,
+	0x00000100,
+	0x40000002,
+	0x00000100,
+	0x40000002,
+	0x00000100,
+	0x00000002,
+	0x00020000,
+	0x08000000,
+	0x00000000,
+	0x00000020,
+	0x00008000,
+	0x20001000,
+	0x00000080,
+	0x20000001,
+	0x00000080,
+	0x20000001,
+	0x00000080,
+	0x20000001,
+	0x00000080,
+	0x00000001,
+	0x00010000,
+	0x04000000,
+	0x00FF0000,
+	0x00000000,
+	0x00004000,
+	0x00000800,
+	0xC0000001,
+	0x00041419,
+	0x40000000,
+	0x04000816,
+	0x000D0000,
+	0x00006800,
+	0x00000340,
+	0xD000001A,
+	0x06800000,
+	0x00340000,
+	0x0001A000,
+	0x00000D00,
+	0x40000068,
+	0x1A000003,
+	0x00D00000,
+	0x00068000,
+	0x00003400,
+	0x000001A0,
+	0x00000401,
+	0x00000008,
+	0x00000401,
+	0x00000008,
+	0x00000401,
+	0x00000008,
+	0x00000401,
+	0x80000008,
+	0x0000007F,
+	0x20000000,
+	0x00000000,
+	0xE0000080,
+	0x0000001F,
+	0x00004000,
+};
+
+
+#endif /* __SOCFPGA_IOCSR_CONFIG_H__ */
diff --git a/board/cl/mitysom-5cse/qts/pinmux_config.h b/board/cl/mitysom-5cse/qts/pinmux_config.h
new file mode 100644
index 0000000000..1417f639ef
--- /dev/null
+++ b/board/cl/mitysom-5cse/qts/pinmux_config.h
@@ -0,0 +1,218 @@
+/* SPDX-License-Identifier: BSD-3-Clause */
+/*
+ * Altera SoCFPGA PinMux configuration
+ */
+
+#ifndef __SOCFPGA_PINMUX_CONFIG_H__
+#define __SOCFPGA_PINMUX_CONFIG_H__
+
+const u8 sys_mgr_init_table[] = {
+	0, /* EMACIO0 */
+	2, /* EMACIO1 */
+	2, /* EMACIO2 */
+	2, /* EMACIO3 */
+	2, /* EMACIO4 */
+	2, /* EMACIO5 */
+	2, /* EMACIO6 */
+	2, /* EMACIO7 */
+	2, /* EMACIO8 */
+	0, /* EMACIO9 */
+	2, /* EMACIO10 */
+	2, /* EMACIO11 */
+	2, /* EMACIO12 */
+	2, /* EMACIO13 */
+	0, /* EMACIO14 */
+	0, /* EMACIO15 */
+	0, /* EMACIO16 */
+	0, /* EMACIO17 */
+	0, /* EMACIO18 */
+	0, /* EMACIO19 */
+	3, /* FLASHIO0 */
+	0, /* FLASHIO1 */
+	3, /* FLASHIO2 */
+	3, /* FLASHIO3 */
+	0, /* FLASHIO4 */
+	0, /* FLASHIO5 */
+	0, /* FLASHIO6 */
+	0, /* FLASHIO7 */
+	0, /* FLASHIO8 */
+	3, /* FLASHIO9 */
+	3, /* FLASHIO10 */
+	3, /* FLASHIO11 */
+	0, /* GENERALIO0 */
+	0, /* GENERALIO1 */
+	0, /* GENERALIO2 */
+	1, /* GENERALIO3 */
+	1, /* GENERALIO4 */
+	0, /* GENERALIO5 */
+	0, /* GENERALIO6 */
+	0, /* GENERALIO7 */
+	0, /* GENERALIO8 */
+	0, /* GENERALIO9 */
+	0, /* GENERALIO10 */
+	0, /* GENERALIO11 */
+	0, /* GENERALIO12 */
+	0, /* GENERALIO13 */
+	0, /* GENERALIO14 */
+	0, /* GENERALIO15 */
+	0, /* GENERALIO16 */
+	2, /* GENERALIO17 */
+	2, /* GENERALIO18 */
+	0, /* GENERALIO19 */
+	0, /* GENERALIO20 */
+	0, /* GENERALIO21 */
+	0, /* GENERALIO22 */
+	0, /* GENERALIO23 */
+	0, /* GENERALIO24 */
+	0, /* GENERALIO25 */
+	0, /* GENERALIO26 */
+	0, /* GENERALIO27 */
+	0, /* GENERALIO28 */
+	0, /* GENERALIO29 */
+	0, /* GENERALIO30 */
+	0, /* GENERALIO31 */
+	2, /* MIXED1IO0 */
+	2, /* MIXED1IO1 */
+	2, /* MIXED1IO2 */
+	2, /* MIXED1IO3 */
+	2, /* MIXED1IO4 */
+	2, /* MIXED1IO5 */
+	2, /* MIXED1IO6 */
+	2, /* MIXED1IO7 */
+	2, /* MIXED1IO8 */
+	2, /* MIXED1IO9 */
+	2, /* MIXED1IO10 */
+	2, /* MIXED1IO11 */
+	2, /* MIXED1IO12 */
+	2, /* MIXED1IO13 */
+	0, /* MIXED1IO14 */
+	3, /* MIXED1IO15 */
+	3, /* MIXED1IO16 */
+	3, /* MIXED1IO17 */
+	3, /* MIXED1IO18 */
+	3, /* MIXED1IO19 */
+	3, /* MIXED1IO20 */
+	3, /* MIXED1IO21 */
+	0, /* MIXED2IO0 */
+	0, /* MIXED2IO1 */
+	0, /* MIXED2IO2 */
+	0, /* MIXED2IO3 */
+	0, /* MIXED2IO4 */
+	0, /* MIXED2IO5 */
+	0, /* MIXED2IO6 */
+	0, /* MIXED2IO7 */
+	0, /* GPLINMUX48 */
+	0, /* GPLINMUX49 */
+	0, /* GPLINMUX50 */
+	0, /* GPLINMUX51 */
+	0, /* GPLINMUX52 */
+	0, /* GPLINMUX53 */
+	0, /* GPLINMUX54 */
+	0, /* GPLINMUX55 */
+	0, /* GPLINMUX56 */
+	0, /* GPLINMUX57 */
+	0, /* GPLINMUX58 */
+	0, /* GPLINMUX59 */
+	0, /* GPLINMUX60 */
+	0, /* GPLINMUX61 */
+	0, /* GPLINMUX62 */
+	0, /* GPLINMUX63 */
+	0, /* GPLINMUX64 */
+	0, /* GPLINMUX65 */
+	0, /* GPLINMUX66 */
+	0, /* GPLINMUX67 */
+	0, /* GPLINMUX68 */
+	0, /* GPLINMUX69 */
+	0, /* GPLINMUX70 */
+	1, /* GPLMUX0 */
+	1, /* GPLMUX1 */
+	1, /* GPLMUX2 */
+	1, /* GPLMUX3 */
+	1, /* GPLMUX4 */
+	1, /* GPLMUX5 */
+	1, /* GPLMUX6 */
+	1, /* GPLMUX7 */
+	1, /* GPLMUX8 */
+	1, /* GPLMUX9 */
+	1, /* GPLMUX10 */
+	1, /* GPLMUX11 */
+	1, /* GPLMUX12 */
+	1, /* GPLMUX13 */
+	1, /* GPLMUX14 */
+	1, /* GPLMUX15 */
+	1, /* GPLMUX16 */
+	1, /* GPLMUX17 */
+	1, /* GPLMUX18 */
+	1, /* GPLMUX19 */
+	1, /* GPLMUX20 */
+	1, /* GPLMUX21 */
+	1, /* GPLMUX22 */
+	1, /* GPLMUX23 */
+	1, /* GPLMUX24 */
+	1, /* GPLMUX25 */
+	1, /* GPLMUX26 */
+	1, /* GPLMUX27 */
+	1, /* GPLMUX28 */
+	1, /* GPLMUX29 */
+	1, /* GPLMUX30 */
+	1, /* GPLMUX31 */
+	1, /* GPLMUX32 */
+	1, /* GPLMUX33 */
+	1, /* GPLMUX34 */
+	1, /* GPLMUX35 */
+	1, /* GPLMUX36 */
+	1, /* GPLMUX37 */
+	1, /* GPLMUX38 */
+	1, /* GPLMUX39 */
+	1, /* GPLMUX40 */
+	1, /* GPLMUX41 */
+	1, /* GPLMUX42 */
+	1, /* GPLMUX43 */
+	1, /* GPLMUX44 */
+	1, /* GPLMUX45 */
+	1, /* GPLMUX46 */
+	1, /* GPLMUX47 */
+	1, /* GPLMUX48 */
+	1, /* GPLMUX49 */
+	1, /* GPLMUX50 */
+	1, /* GPLMUX51 */
+	1, /* GPLMUX52 */
+	1, /* GPLMUX53 */
+	1, /* GPLMUX54 */
+	1, /* GPLMUX55 */
+	1, /* GPLMUX56 */
+	1, /* GPLMUX57 */
+	1, /* GPLMUX58 */
+	1, /* GPLMUX59 */
+	1, /* GPLMUX60 */
+	1, /* GPLMUX61 */
+	1, /* GPLMUX62 */
+	1, /* GPLMUX63 */
+	1, /* GPLMUX64 */
+	1, /* GPLMUX65 */
+	1, /* GPLMUX66 */
+	1, /* GPLMUX67 */
+	1, /* GPLMUX68 */
+	1, /* GPLMUX69 */
+	1, /* GPLMUX70 */
+	0, /* NANDUSEFPGA */
+	0, /* UART0USEFPGA */
+	0, /* RGMII1USEFPGA */
+	0, /* SPIS0USEFPGA */
+	0, /* CAN0USEFPGA */
+	0, /* I2C0USEFPGA */
+	0, /* SDMMCUSEFPGA */
+	0, /* QSPIUSEFPGA */
+	0, /* SPIS1USEFPGA */
+	0, /* RGMII0USEFPGA */
+	0, /* UART1USEFPGA */
+	0, /* CAN1USEFPGA */
+	0, /* USB1USEFPGA */
+	0, /* I2C3USEFPGA */
+	0, /* I2C2USEFPGA */
+	0, /* I2C1USEFPGA */
+	0, /* SPIM1USEFPGA */
+	0, /* USB0USEFPGA */
+	0 /* SPIM0USEFPGA */
+};
+#endif /* __SOCFPGA_PINMUX_CONFIG_H__ */
diff --git a/board/cl/mitysom-5cse/qts/pll_config.h b/board/cl/mitysom-5cse/qts/pll_config.h
new file mode 100644
index 0000000000..a816176df4
--- /dev/null
+++ b/board/cl/mitysom-5cse/qts/pll_config.h
@@ -0,0 +1,84 @@
+/* SPDX-License-Identifier: BSD-3-Clause */
+/*
+ * Altera SoCFPGA Clock and PLL configuration
+ */
+
+#ifndef __SOCFPGA_PLL_CONFIG_H__
+#define __SOCFPGA_PLL_CONFIG_H__
+
+#define CONFIG_HPS_DBCTRL_STAYOSC1 1
+
+#define CONFIG_HPS_MAINPLLGRP_VCO_DENOM 0
+#define CONFIG_HPS_MAINPLLGRP_VCO_NUMER 47
+#define CONFIG_HPS_MAINPLLGRP_MPUCLK_CNT 0
+#define CONFIG_HPS_MAINPLLGRP_MAINCLK_CNT 0
+#define CONFIG_HPS_MAINPLLGRP_DBGATCLK_CNT 0
+#define CONFIG_HPS_MAINPLLGRP_MAINQSPICLK_CNT 2
+#define CONFIG_HPS_MAINPLLGRP_MAINNANDSDMMCCLK_CNT 511
+#define CONFIG_HPS_MAINPLLGRP_CFGS2FUSER0CLK_CNT 11
+#define CONFIG_HPS_MAINPLLGRP_MAINDIV_L3MPCLK 1
+#define CONFIG_HPS_MAINPLLGRP_MAINDIV_L3SPCLK 1
+#define CONFIG_HPS_MAINPLLGRP_MAINDIV_L4MPCLK 1
+#define CONFIG_HPS_MAINPLLGRP_MAINDIV_L4SPCLK 1
+#define CONFIG_HPS_MAINPLLGRP_DBGDIV_DBGATCLK 0
+#define CONFIG_HPS_MAINPLLGRP_DBGDIV_DBGCLK 1
+#define CONFIG_HPS_MAINPLLGRP_TRACEDIV_TRACECLK 0
+#define CONFIG_HPS_MAINPLLGRP_L4SRC_L4MP 1
+#define CONFIG_HPS_MAINPLLGRP_L4SRC_L4SP 1
+
+#define CONFIG_HPS_PERPLLGRP_VCO_DENOM 0
+#define CONFIG_HPS_PERPLLGRP_VCO_NUMER 39
+#define CONFIG_HPS_PERPLLGRP_VCO_PSRC 0
+#define CONFIG_HPS_PERPLLGRP_EMAC0CLK_CNT 511
+#define CONFIG_HPS_PERPLLGRP_EMAC1CLK_CNT 3
+#define CONFIG_HPS_PERPLLGRP_PERQSPICLK_CNT 511
+#define CONFIG_HPS_PERPLLGRP_PERNANDSDMMCCLK_CNT 4
+#define CONFIG_HPS_PERPLLGRP_PERBASECLK_CNT 4
+#define CONFIG_HPS_PERPLLGRP_S2FUSER1CLK_CNT 399
+#define CONFIG_HPS_PERPLLGRP_DIV_USBCLK 0
+#define CONFIG_HPS_PERPLLGRP_DIV_SPIMCLK 4
+#define CONFIG_HPS_PERPLLGRP_DIV_CAN0CLK 4
+#define CONFIG_HPS_PERPLLGRP_DIV_CAN1CLK 4
+#define CONFIG_HPS_PERPLLGRP_GPIODIV_GPIODBCLK 6249
+#define CONFIG_HPS_PERPLLGRP_SRC_SDMMC 2
+#define CONFIG_HPS_PERPLLGRP_SRC_NAND 2
+#define CONFIG_HPS_PERPLLGRP_SRC_QSPI 1
+
+#define CONFIG_HPS_SDRPLLGRP_VCO_DENOM 0
+#define CONFIG_HPS_SDRPLLGRP_VCO_NUMER 23
+#define CONFIG_HPS_SDRPLLGRP_VCO_SSRC 0
+#define CONFIG_HPS_SDRPLLGRP_DDRDQSCLK_CNT 1
+#define CONFIG_HPS_SDRPLLGRP_DDRDQSCLK_PHASE 0
+#define CONFIG_HPS_SDRPLLGRP_DDR2XDQSCLK_CNT 0
+#define CONFIG_HPS_SDRPLLGRP_DDR2XDQSCLK_PHASE 0
+#define CONFIG_HPS_SDRPLLGRP_DDRDQCLK_CNT 1
+#define CONFIG_HPS_SDRPLLGRP_DDRDQCLK_PHASE 4
+#define CONFIG_HPS_SDRPLLGRP_S2FUSER2CLK_CNT 3
+#define CONFIG_HPS_SDRPLLGRP_S2FUSER2CLK_PHASE 0
+
+#define CONFIG_HPS_CLK_OSC1_HZ 25000000
+#define CONFIG_HPS_CLK_OSC2_HZ 25000000
+#define CONFIG_HPS_CLK_F2S_SDR_REF_HZ 0
+#define CONFIG_HPS_CLK_F2S_PER_REF_HZ 0
+#define CONFIG_HPS_CLK_MAINVCO_HZ 1200000000
+#define CONFIG_HPS_CLK_PERVCO_HZ 1000000000
+#define CONFIG_HPS_CLK_SDRVCO_HZ 600000000
+#define CONFIG_HPS_CLK_EMAC0_HZ 1953125
+#define CONFIG_HPS_CLK_EMAC1_HZ 250000000
+#define CONFIG_HPS_CLK_USBCLK_HZ 200000000
+#define CONFIG_HPS_CLK_NAND_HZ 50000000
+#define CONFIG_HPS_CLK_SDMMC_HZ 200000000
+#define CONFIG_HPS_CLK_QSPI_HZ 400000000
+#define CONFIG_HPS_CLK_SPIM_HZ 12500000
+#define CONFIG_HPS_CLK_CAN0_HZ 12500000
+#define CONFIG_HPS_CLK_CAN1_HZ 12500000
+#define CONFIG_HPS_CLK_GPIODB_HZ 32000
+#define CONFIG_HPS_CLK_L4_MP_HZ 100000000
+#define CONFIG_HPS_CLK_L4_SP_HZ 100000000
+
+#define CONFIG_HPS_ALTERAGRP_MPUCLK 3
+#define CONFIG_HPS_ALTERAGRP_MAINCLK 3
+#define CONFIG_HPS_ALTERAGRP_DBGATCLK 3
+
+
+#endif /* __SOCFPGA_PLL_CONFIG_H__ */
diff --git a/board/cl/mitysom-5cse/qts/sdram_config.h b/board/cl/mitysom-5cse/qts/sdram_config.h
new file mode 100644
index 0000000000..1d11ee8ed1
--- /dev/null
+++ b/board/cl/mitysom-5cse/qts/sdram_config.h
@@ -0,0 +1,344 @@
+/* SPDX-License-Identifier: BSD-3-Clause */
+/*
+ * Altera SoCFPGA SDRAM configuration
+ *
+ */
+
+#ifndef __SOCFPGA_SDRAM_CONFIG_H__
+#define __SOCFPGA_SDRAM_CONFIG_H__
+
+/* SDRAM configuration */
+#define CONFIG_HPS_SDR_CTRLCFG_CPORTRDWR_CPORTRDWR		0x5A56A
+#define CONFIG_HPS_SDR_CTRLCFG_CPORTRMAP_CPORTRMAP		0xB00088
+#define CONFIG_HPS_SDR_CTRLCFG_CPORTWIDTH_CPORTWIDTH		0x44555
+#define CONFIG_HPS_SDR_CTRLCFG_CPORTWMAP_CPORTWMAP		0x2C011000
+#define CONFIG_HPS_SDR_CTRLCFG_CTRLCFG_ADDRORDER		0
+#define CONFIG_HPS_SDR_CTRLCFG_CTRLCFG_DQSTRKEN			0
+#define CONFIG_HPS_SDR_CTRLCFG_CTRLCFG_ECCCORREN		0
+#define CONFIG_HPS_SDR_CTRLCFG_CTRLCFG_ECCEN			0
+#define CONFIG_HPS_SDR_CTRLCFG_CTRLCFG_MEMBL			8
+#define CONFIG_HPS_SDR_CTRLCFG_CTRLCFG_MEMTYPE			2
+#define CONFIG_HPS_SDR_CTRLCFG_CTRLCFG_NODMPINS			0
+#define CONFIG_HPS_SDR_CTRLCFG_CTRLCFG_REORDEREN		1
+#define CONFIG_HPS_SDR_CTRLCFG_CTRLCFG_STARVELIMIT		10
+#define CONFIG_HPS_SDR_CTRLCFG_CTRLWIDTH_CTRLWIDTH		1
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMADDRW_BANKBITS		3
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMADDRW_COLBITS		10
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMADDRW_CSBITS			1
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMADDRW_ROWBITS		15
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMDEVWIDTH_DEVWIDTH		8
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMIFWIDTH_IFWIDTH		16
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMINTR_INTREN			0
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMODT_READ			0
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMODT_WRITE			1
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMTIMING1_AL			0
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMTIMING1_TCL			7
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMTIMING1_TCWL			6
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMTIMING1_TFAW			10
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMTIMING1_TRFC			79
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMTIMING1_TRRD			4
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMTIMING2_IF_TRCD		5
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMTIMING2_IF_TREFI		2341
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMTIMING2_IF_TRP		5
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMTIMING2_IF_TWR		5
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMTIMING2_IF_TWTR		4
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMTIMING3_TCCD			4
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMTIMING3_TMRD			4
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMTIMING3_TRAS			11
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMTIMING3_TRC			15
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMTIMING3_TRTP			4
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMTIMING4_PWRDOWNEXIT		3
+#define CONFIG_HPS_SDR_CTRLCFG_DRAMTIMING4_SELFRFSHEXIT		512
+#define CONFIG_HPS_SDR_CTRLCFG_EXTRATIME1_CFG_EXTRA_CTL_CLK_RD_TO_WR 2
+#define CONFIG_HPS_SDR_CTRLCFG_EXTRATIME1_CFG_EXTRA_CTL_CLK_RD_TO_WR_BC 2
+#define CONFIG_HPS_SDR_CTRLCFG_EXTRATIME1_CFG_EXTRA_CTL_CLK_RD_TO_WR_DIFF_CHIP 2
+#define CONFIG_HPS_SDR_CTRLCFG_FIFOCFG_INCSYNC			0
+#define CONFIG_HPS_SDR_CTRLCFG_FIFOCFG_SYNCMODE			0
+#define CONFIG_HPS_SDR_CTRLCFG_FPGAPORTRST			0x111
+#define CONFIG_HPS_SDR_CTRLCFG_LOWPWREQ_SELFRFSHMASK		3
+#define CONFIG_HPS_SDR_CTRLCFG_LOWPWRTIMING_AUTOPDCYCLES	0
+#define CONFIG_HPS_SDR_CTRLCFG_LOWPWRTIMING_CLKDISABLECYCLES	8
+#define CONFIG_HPS_SDR_CTRLCFG_MPPACING_0_THRESHOLD1_31_0	0x20820820
+#define CONFIG_HPS_SDR_CTRLCFG_MPPACING_1_THRESHOLD1_59_32	0x8208208
+#define CONFIG_HPS_SDR_CTRLCFG_MPPACING_1_THRESHOLD2_3_0	0
+#define CONFIG_HPS_SDR_CTRLCFG_MPPACING_2_THRESHOLD2_35_4	0x41041041
+#define CONFIG_HPS_SDR_CTRLCFG_MPPACING_3_THRESHOLD2_59_36	0x410410
+#define CONFIG_HPS_SDR_CTRLCFG_MPPRIORITY_USERPRIORITY		0x0
+#define CONFIG_HPS_SDR_CTRLCFG_MPTHRESHOLDRST_0_THRESHOLDRSTCYCLES_31_0 0x01010101
+#define CONFIG_HPS_SDR_CTRLCFG_MPTHRESHOLDRST_1_THRESHOLDRSTCYCLES_63_32 0x01010101
+#define CONFIG_HPS_SDR_CTRLCFG_MPTHRESHOLDRST_2_THRESHOLDRSTCYCLES_79_64 0x0101
+#define CONFIG_HPS_SDR_CTRLCFG_MPWIEIGHT_0_STATICWEIGHT_31_0	0x21084210
+#define CONFIG_HPS_SDR_CTRLCFG_MPWIEIGHT_1_STATICWEIGHT_49_32	0x10441
+#define CONFIG_HPS_SDR_CTRLCFG_MPWIEIGHT_1_SUMOFWEIGHT_13_0	0x78
+#define CONFIG_HPS_SDR_CTRLCFG_MPWIEIGHT_2_SUMOFWEIGHT_45_14	0x0
+#define CONFIG_HPS_SDR_CTRLCFG_MPWIEIGHT_3_SUMOFWEIGHT_63_46	0x0
+#define CONFIG_HPS_SDR_CTRLCFG_PHYCTRL_PHYCTRL_0		0x200
+#define CONFIG_HPS_SDR_CTRLCFG_PORTCFG_AUTOPCHEN		0
+#define CONFIG_HPS_SDR_CTRLCFG_RFIFOCMAP_RFIFOCMAP		0x760210
+#define CONFIG_HPS_SDR_CTRLCFG_STATICCFG_MEMBL			2
+#define CONFIG_HPS_SDR_CTRLCFG_STATICCFG_USEECCASDATA		0
+#define CONFIG_HPS_SDR_CTRLCFG_WFIFOCMAP_WFIFOCMAP		0x980543
+
+/* Sequencer auto configuration */
+#define RW_MGR_ACTIVATE_0_AND_1	0x0D
+#define RW_MGR_ACTIVATE_0_AND_1_WAIT1	0x0E
+#define RW_MGR_ACTIVATE_0_AND_1_WAIT2	0x10
+#define RW_MGR_ACTIVATE_1	0x0F
+#define RW_MGR_CLEAR_DQS_ENABLE	0x49
+#define RW_MGR_GUARANTEED_READ	0x4C
+#define RW_MGR_GUARANTEED_READ_CONT	0x54
+#define RW_MGR_GUARANTEED_WRITE	0x18
+#define RW_MGR_GUARANTEED_WRITE_WAIT0	0x1B
+#define RW_MGR_GUARANTEED_WRITE_WAIT1	0x1F
+#define RW_MGR_GUARANTEED_WRITE_WAIT2	0x19
+#define RW_MGR_GUARANTEED_WRITE_WAIT3	0x1D
+#define RW_MGR_IDLE	0x00
+#define RW_MGR_IDLE_LOOP1	0x7B
+#define RW_MGR_IDLE_LOOP2	0x7A
+#define RW_MGR_INIT_RESET_0_CKE_0	0x6F
+#define RW_MGR_INIT_RESET_1_CKE_0	0x74
+#define RW_MGR_LFSR_WR_RD_BANK_0	0x22
+#define RW_MGR_LFSR_WR_RD_BANK_0_DATA	0x25
+#define RW_MGR_LFSR_WR_RD_BANK_0_DQS	0x24
+#define RW_MGR_LFSR_WR_RD_BANK_0_NOP	0x23
+#define RW_MGR_LFSR_WR_RD_BANK_0_WAIT	0x32
+#define RW_MGR_LFSR_WR_RD_BANK_0_WL_1	0x21
+#define RW_MGR_LFSR_WR_RD_DM_BANK_0	0x36
+#define RW_MGR_LFSR_WR_RD_DM_BANK_0_DATA	0x39
+#define RW_MGR_LFSR_WR_RD_DM_BANK_0_DQS	0x38
+#define RW_MGR_LFSR_WR_RD_DM_BANK_0_NOP	0x37
+#define RW_MGR_LFSR_WR_RD_DM_BANK_0_WAIT	0x46
+#define RW_MGR_LFSR_WR_RD_DM_BANK_0_WL_1	0x35
+#define RW_MGR_MRS0_DLL_RESET	0x02
+#define RW_MGR_MRS0_DLL_RESET_MIRR	0x08
+#define RW_MGR_MRS0_USER	0x07
+#define RW_MGR_MRS0_USER_MIRR	0x0C
+#define RW_MGR_MRS1	0x03
+#define RW_MGR_MRS1_MIRR	0x09
+#define RW_MGR_MRS2	0x04
+#define RW_MGR_MRS2_MIRR	0x0A
+#define RW_MGR_MRS3	0x05
+#define RW_MGR_MRS3_MIRR	0x0B
+#define RW_MGR_PRECHARGE_ALL	0x12
+#define RW_MGR_READ_B2B	0x59
+#define RW_MGR_READ_B2B_WAIT1	0x61
+#define RW_MGR_READ_B2B_WAIT2	0x6B
+#define RW_MGR_REFRESH_ALL	0x14
+#define RW_MGR_RETURN	0x01
+#define RW_MGR_SGLE_READ	0x7D
+#define RW_MGR_ZQCL	0x06
+
+/* Sequencer defines configuration */
+#define AFI_RATE_RATIO	1
+#define CALIB_LFIFO_OFFSET	8
+#define CALIB_VFIFO_OFFSET	6
+#define ENABLE_SUPER_QUICK_CALIBRATION	0
+#define IO_DELAY_PER_DCHAIN_TAP	25
+#define IO_DELAY_PER_DQS_EN_DCHAIN_TAP	25
+#define IO_DELAY_PER_OPA_TAP	416
+#define IO_DLL_CHAIN_LENGTH	8
+#define IO_DQDQS_OUT_PHASE_MAX	0
+#define IO_DQS_EN_DELAY_MAX	31
+#define IO_DQS_EN_DELAY_OFFSET	0
+#define IO_DQS_EN_PHASE_MAX	7
+#define IO_DQS_IN_DELAY_MAX	31
+#define IO_DQS_IN_RESERVE	4
+#define IO_DQS_OUT_RESERVE	4
+#define IO_IO_IN_DELAY_MAX	31
+#define IO_IO_OUT1_DELAY_MAX	31
+#define IO_IO_OUT2_DELAY_MAX	0
+#define IO_SHIFT_DQS_EN_WHEN_SHIFT_DQS	0
+#define MAX_LATENCY_COUNT_WIDTH	5
+#define READ_VALID_FIFO_SIZE	16
+#define REG_FILE_INIT_SEQ_SIGNATURE	0x555504c9
+#define RW_MGR_MEM_ADDRESS_MIRRORING	0
+#define RW_MGR_MEM_DATA_MASK_WIDTH	2
+#define RW_MGR_MEM_DATA_WIDTH	16
+#define RW_MGR_MEM_DQ_PER_READ_DQS	8
+#define RW_MGR_MEM_DQ_PER_WRITE_DQS	8
+#define RW_MGR_MEM_IF_READ_DQS_WIDTH	2
+#define RW_MGR_MEM_IF_WRITE_DQS_WIDTH	2
+#define RW_MGR_MEM_NUMBER_OF_CS_PER_DIMM	1
+#define RW_MGR_MEM_NUMBER_OF_RANKS	1
+#define RW_MGR_MEM_VIRTUAL_GROUPS_PER_READ_DQS	1
+#define RW_MGR_MEM_VIRTUAL_GROUPS_PER_WRITE_DQS	1
+#define RW_MGR_TRUE_MEM_DATA_MASK_WIDTH	2
+#define TINIT_CNTR0_VAL	74
+#define TINIT_CNTR1_VAL	32
+#define TINIT_CNTR2_VAL	32
+#define TRESET_CNTR0_VAL	74
+#define TRESET_CNTR1_VAL	99
+#define TRESET_CNTR2_VAL	10
+
+/* Sequencer ac_rom_init configuration */
+const u32 ac_rom_init[] = {
+	0x20700000,
+	0x20780000,
+	0x10080231,
+	0x10080330,
+	0x10090006,
+	0x100a0048,
+	0x100b0000,
+	0x10380400,
+	0x10080249,
+	0x100802c8,
+	0x100a0006,
+	0x10090030,
+	0x100b0000,
+	0x30780000,
+	0x38780000,
+	0x30780000,
+	0x10680000,
+	0x106b0000,
+	0x10280400,
+	0x10480000,
+	0x1c980000,
+	0x1c9b0000,
+	0x1c980008,
+	0x1c9b0008,
+	0x38f80000,
+	0x3cf80000,
+	0x38780000,
+	0x18180000,
+	0x18980000,
+	0x13580000,
+	0x135b0000,
+	0x13580008,
+	0x135b0008,
+	0x33780000,
+	0x10580008,
+	0x10780000
+};
+
+/* Sequencer inst_rom_init configuration */
+const u32 inst_rom_init[] = {
+	0x80000,
+	0x80680,
+	0x8180,
+	0x8200,
+	0x8280,
+	0x8300,
+	0x8380,
+	0x8100,
+	0x8480,
+	0x8500,
+	0x8580,
+	0x8600,
+	0x8400,
+	0x800,
+	0x8680,
+	0x880,
+	0xa680,
+	0x80680,
+	0x900,
+	0x80680,
+	0x980,
+	0xa680,
+	0x8680,
+	0x80680,
+	0xb68,
+	0xcce8,
+	0xae8,
+	0x8ce8,
+	0xb88,
+	0xec88,
+	0xa08,
+	0xac88,
+	0x80680,
+	0xce00,
+	0xcd80,
+	0xe700,
+	0xc00,
+	0x20ce0,
+	0x20ce0,
+	0x20ce0,
+	0x20ce0,
+	0xd00,
+	0x680,
+	0x680,
+	0x680,
+	0x680,
+	0x60e80,
+	0x61080,
+	0x61080,
+	0x61080,
+	0xa680,
+	0x8680,
+	0x80680,
+	0xce00,
+	0xcd80,
+	0xe700,
+	0xc00,
+	0x30ce0,
+	0x30ce0,
+	0x30ce0,
+	0x30ce0,
+	0xd00,
+	0x680,
+	0x680,
+	0x680,
+	0x680,
+	0x70e80,
+	0x71080,
+	0x71080,
+	0x71080,
+	0xa680,
+	0x8680,
+	0x80680,
+	0x1158,
+	0x6d8,
+	0x80680,
+	0x1168,
+	0x7e8,
+	0x7e8,
+	0x87e8,
+	0x40fe8,
+	0x410e8,
+	0x410e8,
+	0x410e8,
+	0x1168,
+	0x7e8,
+	0x7e8,
+	0xa7e8,
+	0x80680,
+	0x40e88,
+	0x41088,
+	0x41088,
+	0x41088,
+	0x40f68,
+	0x410e8,
+	0x410e8,
+	0x410e8,
+	0xa680,
+	0x40fe8,
+	0x410e8,
+	0x410e8,
+	0x410e8,
+	0x41008,
+	0x41088,
+	0x41088,
+	0x41088,
+	0x1100,
+	0xc680,
+	0x8680,
+	0xe680,
+	0x80680,
+	0x0,
+	0x8000,
+	0xa000,
+	0xc000,
+	0x80000,
+	0x80,
+	0x8080,
+	0xa080,
+	0xc080,
+	0x80080,
+	0x9180,
+	0x8680,
+	0xa680,
+	0x80680,
+	0x40f08,
+	0x80680
+};
+
+#endif /* __SOCFPGA_SDRAM_CONFIG_H__ */
diff --git a/configs/socfpga_mitysom5cse-l2-3y8_defconfig b/configs/socfpga_mitysom5cse-l2-3y8_defconfig
new file mode 100644
index 0000000000..02572befdc
--- /dev/null
+++ b/configs/socfpga_mitysom5cse-l2-3y8_defconfig
@@ -0,0 +1,1511 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# U-Boot 2019.10 Configuration
+#
+CONFIG_CREATE_ARCH_SYMLINK=y
+# CONFIG_ARC is not set
+CONFIG_ARM=y
+# CONFIG_M68K is not set
+# CONFIG_MICROBLAZE is not set
+# CONFIG_MIPS is not set
+# CONFIG_NDS32 is not set
+# CONFIG_NIOS2 is not set
+# CONFIG_PPC is not set
+# CONFIG_RISCV is not set
+# CONFIG_SANDBOX is not set
+# CONFIG_SH is not set
+# CONFIG_X86 is not set
+# CONFIG_XTENSA is not set
+CONFIG_SYS_ARCH="arm"
+CONFIG_SYS_CPU="armv7"
+CONFIG_SYS_SOC="socfpga"
+CONFIG_SYS_VENDOR="cl"
+CONFIG_SYS_BOARD="mitysom-5cs"
+CONFIG_SYS_CONFIG_NAME="socfpga_mitysom_5cse_l23y8"
+# CONFIG_SYS_ICACHE_OFF is not set
+# CONFIG_SPL_SYS_ICACHE_OFF is not set
+# CONFIG_SYS_DCACHE_OFF is not set
+# CONFIG_SPL_SYS_DCACHE_OFF is not set
+
+#
+# ARM architecture
+#
+CONFIG_HAS_VBAR=y
+CONFIG_HAS_THUMB2=y
+CONFIG_ARM_ASM_UNIFIED=y
+CONFIG_SYS_ARM_CACHE_CP15=y
+CONFIG_SYS_ARM_MMU=y
+# CONFIG_SYS_ARM_MPU is not set
+CONFIG_CPU_V7A=y
+CONFIG_SYS_ARM_ARCH=7
+CONFIG_SYS_CACHE_SHIFT_6=y
+CONFIG_SYS_CACHELINE_SIZE=64
+# CONFIG_ARCH_CPU_INIT is not set
+# CONFIG_SYS_ARCH_TIMER is not set
+# CONFIG_ARM_SMCCC is not set
+# CONFIG_SEMIHOSTING is not set
+CONFIG_SYS_THUMB_BUILD=y
+CONFIG_SPL_SYS_THUMB_BUILD=y
+# CONFIG_SYS_L2CACHE_OFF is not set
+CONFIG_ENABLE_ARM_SOC_BOOT0_HOOK=y
+CONFIG_USE_ARCH_MEMCPY=y
+CONFIG_SPL_USE_ARCH_MEMCPY=y
+CONFIG_USE_ARCH_MEMSET=y
+CONFIG_SPL_USE_ARCH_MEMSET=y
+# CONFIG_ARCH_AT91 is not set
+# CONFIG_TARGET_EDB93XX is not set
+# CONFIG_TARGET_ASPENITE is not set
+# CONFIG_TARGET_GPLUGD is not set
+# CONFIG_ARCH_DAVINCI is not set
+# CONFIG_KIRKWOOD is not set
+# CONFIG_ARCH_MVEBU is not set
+# CONFIG_TARGET_APF27 is not set
+# CONFIG_ORION5X is not set
+# CONFIG_TARGET_SPEAR300 is not set
+# CONFIG_TARGET_SPEAR310 is not set
+# CONFIG_TARGET_SPEAR320 is not set
+# CONFIG_TARGET_SPEAR600 is not set
+# CONFIG_TARGET_STV0991 is not set
+# CONFIG_TARGET_X600 is not set
+# CONFIG_TARGET_WOODBURN is not set
+# CONFIG_TARGET_WOODBURN_SD is not set
+# CONFIG_TARGET_FLEA3 is not set
+# CONFIG_TARGET_MX35PDK is not set
+# CONFIG_ARCH_BCM283X is not set
+# CONFIG_ARCH_BCM63158 is not set
+# CONFIG_ARCH_BCM6858 is not set
+# CONFIG_TARGET_VEXPRESS_CA15_TC2 is not set
+# CONFIG_ARCH_BCMSTB is not set
+# CONFIG_TARGET_VEXPRESS_CA5X2 is not set
+# CONFIG_TARGET_VEXPRESS_CA9X4 is not set
+# CONFIG_TARGET_BCM23550_W1D is not set
+# CONFIG_TARGET_BCM28155_AP is not set
+# CONFIG_TARGET_BCMCYGNUS is not set
+# CONFIG_TARGET_BCMNSP is not set
+# CONFIG_TARGET_BCMNS2 is not set
+# CONFIG_ARCH_EXYNOS is not set
+# CONFIG_ARCH_S5PC1XX is not set
+# CONFIG_ARCH_HIGHBANK is not set
+# CONFIG_ARCH_INTEGRATOR is not set
+# CONFIG_ARCH_KEYSTONE is not set
+# CONFIG_ARCH_K3 is not set
+# CONFIG_ARCH_OMAP2PLUS is not set
+# CONFIG_ARCH_MESON is not set
+# CONFIG_ARCH_MEDIATEK is not set
+# CONFIG_ARCH_LPC32XX is not set
+# CONFIG_ARCH_IMX8 is not set
+# CONFIG_ARCH_IMX8M is not set
+# CONFIG_ARCH_MX23 is not set
+# CONFIG_ARCH_MX25 is not set
+# CONFIG_ARCH_MX28 is not set
+# CONFIG_ARCH_MX31 is not set
+# CONFIG_ARCH_MX7ULP is not set
+# CONFIG_ARCH_MX7 is not set
+# CONFIG_ARCH_MX6 is not set
+CONFIG_SPL_LDSCRIPT="arch/$(ARCH)/cpu/u-boot-spl.lds"
+# CONFIG_ARCH_MX5 is not set
+# CONFIG_ARCH_OWL is not set
+# CONFIG_ARCH_QEMU is not set
+# CONFIG_ARCH_RMOBILE is not set
+# CONFIG_TARGET_S32V234EVB is not set
+# CONFIG_ARCH_SNAPDRAGON is not set
+CONFIG_ARCH_SOCFPGA=y
+# CONFIG_ARCH_SUNXI is not set
+# CONFIG_ARCH_VERSAL is not set
+# CONFIG_ARCH_VF610 is not set
+# CONFIG_ARCH_ZYNQ is not set
+# CONFIG_ARCH_ZYNQMP_R5 is not set
+# CONFIG_ARCH_ZYNQMP is not set
+# CONFIG_TEGRA is not set
+# CONFIG_TARGET_VEXPRESS64_AEMV8A is not set
+# CONFIG_TARGET_VEXPRESS64_BASE_FVP is not set
+# CONFIG_TARGET_VEXPRESS64_JUNO is not set
+# CONFIG_TARGET_LS2080A_EMU is not set
+# CONFIG_TARGET_LS2080A_SIMU is not set
+# CONFIG_TARGET_LS1088AQDS is not set
+# CONFIG_TARGET_LS2080AQDS is not set
+# CONFIG_TARGET_LS2080ARDB is not set
+# CONFIG_TARGET_LS2081ARDB is not set
+# CONFIG_TARGET_LX2160ARDB is not set
+# CONFIG_TARGET_LX2160AQDS is not set
+# CONFIG_TARGET_HIKEY is not set
+# CONFIG_TARGET_HIKEY960 is not set
+# CONFIG_TARGET_POPLAR is not set
+# CONFIG_TARGET_LS1012AQDS is not set
+# CONFIG_TARGET_LS1012ARDB is not set
+# CONFIG_TARGET_LS1012A2G5RDB is not set
+# CONFIG_TARGET_LS1012AFRWY is not set
+# CONFIG_TARGET_LS1012AFRDM is not set
+# CONFIG_TARGET_LS1028AQDS is not set
+# CONFIG_TARGET_LS1028ARDB is not set
+# CONFIG_TARGET_LS1088ARDB is not set
+# CONFIG_TARGET_LS1021AQDS is not set
+# CONFIG_TARGET_LS1021ATWR is not set
+# CONFIG_TARGET_LS1021ATSN is not set
+# CONFIG_TARGET_LS1021AIOT is not set
+# CONFIG_TARGET_LS1043AQDS is not set
+# CONFIG_TARGET_LS1043ARDB is not set
+# CONFIG_TARGET_LS1046AQDS is not set
+# CONFIG_TARGET_LS1046ARDB is not set
+# CONFIG_TARGET_LS1046AFRWY is not set
+# CONFIG_TARGET_H2200 is not set
+# CONFIG_TARGET_COLIBRI_PXA270 is not set
+# CONFIG_ARCH_UNIPHIER is not set
+# CONFIG_STM32 is not set
+# CONFIG_ARCH_STI is not set
+# CONFIG_ARCH_STM32MP is not set
+# CONFIG_ARCH_ROCKCHIP is not set
+# CONFIG_TARGET_THUNDERX_88XX is not set
+# CONFIG_ARCH_ASPEED is not set
+CONFIG_SYS_TEXT_BASE=0x01000040
+# CONFIG_SPL_GPIO_SUPPORT is not set
+CONFIG_SPL_LIBCOMMON_SUPPORT=y
+CONFIG_SPL_LIBGENERIC_SUPPORT=y
+CONFIG_SYS_MALLOC_F_LEN=0x2000
+CONFIG_SPL_MMC_SUPPORT=y
+CONFIG_SPL_SERIAL_SUPPORT=y
+# CONFIG_SPL_DRIVERS_MISC_SUPPORT is not set
+CONFIG_SPL_SYS_MALLOC_F_LEN=0x800
+CONFIG_NR_DRAM_BANKS=1
+CONFIG_SPL_SIZE_LIMIT=65536
+CONFIG_SPL_SIZE_LIMIT_PROVIDE_STACK=0x200
+CONFIG_SPL_STACK_R_ADDR=0x00800000
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_PARTITION_TYPE=0xa2
+# CONFIG_SMC_SIP_FPGA_RECONFIG is not set
+CONFIG_TARGET_SOCFPGA_CYCLONE5=y
+CONFIG_TARGET_SOCFPGA_GEN5=y
+# CONFIG_TARGET_SOCFPGA_ARIES_MCVEVK is not set
+# CONFIG_TARGET_SOCFPGA_AGILEX_SOCDK is not set
+# CONFIG_TARGET_SOCFPGA_ARRIA10_SOCDK is not set
+# CONFIG_TARGET_SOCFPGA_ARRIA5_SOCDK is not set
+# CONFIG_TARGET_SOCFPGA_CYCLONE5_SOCDK is not set
+# CONFIG_TARGET_SOCFPGA_DEVBOARDS_DBM_SOC1 is not set
+# CONFIG_TARGET_SOCFPGA_EBV_SOCRATES is not set
+# CONFIG_TARGET_SOCFPGA_IS1 is not set
+# CONFIG_TARGET_SOCFPGA_SAMTEC_VINING_FPGA is not set
+# CONFIG_TARGET_SOCFPGA_SR1500 is not set
+# CONFIG_TARGET_SOCFPGA_STRATIX10_SOCDK is not set
+# CONFIG_TARGET_SOCFPGA_TERASIC_DE0_NANO is not set
+# CONFIG_TARGET_SOCFPGA_TERASIC_DE10_NANO is not set
+# CONFIG_TARGET_SOCFPGA_TERASIC_DE1_SOC is not set
+# CONFIG_TARGET_SOCFPGA_TERASIC_SOCKIT is not set
+CONFIG_TARGET_SOCFPGA_CL_MITYSOM_5CSE=y
+CONFIG_SPL=y
+CONFIG_BOOTSTAGE_STASH_ADDR=0
+CONFIG_IDENT_STRING=" Critical Link MitySOM-5CSE-L2-3Y8"
+# CONFIG_SPL_FS_FAT is not set
+CONFIG_SPL_LIBDISK_SUPPORT=y
+CONFIG_SPL_SPI_FLASH_SUPPORT=y
+CONFIG_SPL_SPI_SUPPORT=y
+# CONFIG_ARMV7_LPAE is not set
+# CONFIG_CMD_DEKBLOB is not set
+# CONFIG_CMD_HDMIDETECT is not set
+
+#
+# ARM debug
+#
+# CONFIG_DEBUG_LL is not set
+CONFIG_SMBIOS_PRODUCT_NAME="mitysom-5cs"
+# CONFIG_DEBUG_UART is not set
+# CONFIG_AHCI is not set
+CONFIG_SPL_TEXT_BASE=0xFFFF0000
+
+#
+# General setup
+#
+CONFIG_LOCALVERSION=""
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_CC_OPTIMIZE_FOR_SIZE=y
+CONFIG_DISTRO_DEFAULTS=y
+CONFIG_ENV_VARS_UBOOT_CONFIG=y
+# CONFIG_SYS_BOOT_GET_CMDLINE is not set
+# CONFIG_SYS_BOOT_GET_KBD is not set
+CONFIG_SYS_MALLOC_F=y
+CONFIG_EXPERT=y
+CONFIG_SYS_MALLOC_CLEAR_ON_INIT=y
+# CONFIG_TOOLS_DEBUG is not set
+# CONFIG_PHYS_64BIT is not set
+CONFIG_SPL_IMAGE="spl/u-boot-spl.bin"
+CONFIG_BUILD_TARGET="u-boot-with-spl.sfp"
+# CONFIG_SYS_CUSTOM_LDSCRIPT is not set
+
+#
+# Boot images
+#
+# CONFIG_ANDROID_BOOT_IMAGE is not set
+CONFIG_FIT=y
+CONFIG_FIT_EXTERNAL_OFFSET=0x0
+CONFIG_FIT_ENABLE_SHA256_SUPPORT=y
+# CONFIG_FIT_SIGNATURE is not set
+# CONFIG_FIT_VERBOSE is not set
+# CONFIG_FIT_BEST_MATCH is not set
+# CONFIG_SPL_FIT is not set
+# CONFIG_SPL_FIT_SIGNATURE is not set
+# CONFIG_SPL_LOAD_FIT is not set
+# CONFIG_SPL_LOAD_FIT_FULL is not set
+CONFIG_LEGACY_IMAGE_FORMAT=y
+# CONFIG_OF_BOARD_SETUP is not set
+# CONFIG_OF_SYSTEM_SETUP is not set
+# CONFIG_OF_STDOUT_VIA_ALIAS is not set
+CONFIG_SYS_EXTRA_OPTIONS=""
+CONFIG_ARCH_FIXUP_FDT_MEMORY=y
+
+#
+# API
+#
+# CONFIG_API is not set
+
+#
+# Boot timing
+#
+# CONFIG_BOOTSTAGE is not set
+CONFIG_BOOTSTAGE_RECORD_COUNT=30
+CONFIG_SPL_BOOTSTAGE_RECORD_COUNT=5
+CONFIG_TPL_BOOTSTAGE_RECORD_COUNT=5
+CONFIG_BOOTSTAGE_STASH_SIZE=0x1000
+# CONFIG_SHOW_BOOT_PROGRESS is not set
+
+#
+# Boot media
+#
+# CONFIG_NAND_BOOT is not set
+# CONFIG_ONENAND_BOOT is not set
+# CONFIG_QSPI_BOOT is not set
+# CONFIG_SATA_BOOT is not set
+# CONFIG_SD_BOOT is not set
+# CONFIG_SPI_BOOT is not set
+CONFIG_BOOTDELAY=2
+# CONFIG_USE_BOOTARGS is not set
+CONFIG_USE_BOOTCOMMAND=y
+CONFIG_BOOTCOMMAND="run fatscript; bridge enable; run distro_bootcmd"
+CONFIG_USE_PREBOOT=y
+CONFIG_PREBOOT=""
+
+#
+# Console
+#
+CONFIG_MENU=y
+# CONFIG_CONSOLE_RECORD is not set
+# CONFIG_DISABLE_CONSOLE is not set
+CONFIG_LOGLEVEL=4
+CONFIG_SPL_LOGLEVEL=4
+CONFIG_TPL_LOGLEVEL=4
+# CONFIG_SILENT_CONSOLE is not set
+# CONFIG_PRE_CONSOLE_BUFFER is not set
+# CONFIG_CONSOLE_MUX is not set
+CONFIG_SYS_CONSOLE_IS_IN_ENV=y
+CONFIG_SYS_CONSOLE_OVERWRITE_ROUTINE=y
+CONFIG_SYS_CONSOLE_ENV_OVERWRITE=y
+# CONFIG_SYS_CONSOLE_INFO_QUIET is not set
+# CONFIG_SYS_STDIO_DEREGISTER is not set
+
+#
+# Logging
+#
+# CONFIG_LOG is not set
+CONFIG_LOG_DEFAULT_LEVEL=6
+CONFIG_SUPPORT_RAW_INITRD=y
+CONFIG_DEFAULT_DEVICE_TREE="socfpga_mitysom5cse-l2-3y8_empty"
+CONFIG_MISC_INIT_R=y
+CONFIG_VERSION_VARIABLE=y
+# CONFIG_BOARD_LATE_INIT is not set
+CONFIG_DISPLAY_CPUINFO=y
+CONFIG_DISPLAY_BOARDINFO=y
+# CONFIG_DISPLAY_BOARDINFO_LATE is not set
+CONFIG_BOUNCE_BUFFER=y
+# CONFIG_BOARD_TYPES is not set
+
+#
+# Start-up hooks
+#
+CONFIG_ARCH_EARLY_INIT_R=y
+CONFIG_ARCH_MISC_INIT=y
+# CONFIG_BOARD_EARLY_INIT_F is not set
+# CONFIG_BOARD_EARLY_INIT_R is not set
+# CONFIG_LAST_STAGE_INIT is not set
+
+#
+# Security support
+#
+CONFIG_HASH=y
+
+#
+# Update support
+#
+# CONFIG_UPDATE_TFTP is not set
+# CONFIG_ANDROID_AB is not set
+
+#
+# Blob list
+#
+# CONFIG_BLOBLIST is not set
+
+#
+# SPL / TPL
+#
+CONFIG_SUPPORT_SPL=y
+CONFIG_SPL_FRAMEWORK=y
+CONFIG_SPL_SIZE_LIMIT_SUBTRACT_GD=y
+CONFIG_SPL_SIZE_LIMIT_SUBTRACT_MALLOC=y
+CONFIG_SPL_SYS_STACK_F_CHECK_BYTE=0xaa
+# CONFIG_SPL_SYS_REPORT_STACK_F_USAGE is not set
+CONFIG_SPL_BOARD_INIT=y
+# CONFIG_SPL_BOOTROM_SUPPORT is not set
+CONFIG_SPL_RAW_IMAGE_SUPPORT=y
+CONFIG_SPL_LEGACY_IMAGE_SUPPORT=y
+# CONFIG_SPL_LEGACY_IMAGE_CRC_CHECK is not set
+CONFIG_SPL_SYS_MALLOC_SIMPLE=y
+CONFIG_SPL_STACK_R=y
+CONFIG_SPL_STACK_R_MALLOC_SIMPLE_LEN=0x100000
+# CONFIG_SPL_SEPARATE_BSS is not set
+CONFIG_SPL_BANNER_PRINT=y
+# CONFIG_SPL_EARLY_BSS is not set
+# CONFIG_SPL_DISPLAY_PRINT is not set
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_SECTOR=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR=0x200
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_PARTITION=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_PARTITION=1
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_PARTITION_TYPE=y
+CONFIG_SPL_CRC32_SUPPORT=y
+# CONFIG_SPL_CPU_SUPPORT is not set
+# CONFIG_SPL_CRYPTO_SUPPORT is not set
+# CONFIG_SPL_HASH_SUPPORT is not set
+# CONFIG_SPL_DMA_SUPPORT is not set
+# CONFIG_SPL_ENV_SUPPORT is not set
+# CONFIG_SPL_FS_EXT4 is not set
+# CONFIG_SPL_FAT_WRITE is not set
+# CONFIG_SPL_FPGA_SUPPORT is not set
+# CONFIG_SPL_I2C_SUPPORT is not set
+# CONFIG_SPL_DM_MAILBOX is not set
+CONFIG_SPL_L2X0_CACHE=y
+# CONFIG_SPL_MMC_TINY is not set
+# CONFIG_SPL_MMC_WRITE is not set
+# CONFIG_SPL_MPC8XXX_INIT_DDR_SUPPORT is not set
+# CONFIG_SPL_MTD_SUPPORT is not set
+# CONFIG_SPL_MUSB_NEW_SUPPORT is not set
+# CONFIG_SPL_NAND_SUPPORT is not set
+# CONFIG_SPL_UBI is not set
+# CONFIG_SPL_NET_SUPPORT is not set
+# CONFIG_SPL_NO_CPU_SUPPORT is not set
+# CONFIG_SPL_NOR_SUPPORT is not set
+# CONFIG_SPL_XIP_SUPPORT is not set
+# CONFIG_SPL_ONENAND_SUPPORT is not set
+# CONFIG_SPL_OS_BOOT is not set
+CONFIG_SPL_PAYLOAD="u-boot.bin"
+# CONFIG_SPL_PCI is not set
+# CONFIG_SPL_PCH_SUPPORT is not set
+# CONFIG_SPL_POST_MEM_SUPPORT is not set
+CONFIG_SPL_DM_RESET=y
+# CONFIG_SPL_POWER_SUPPORT is not set
+# CONFIG_SPL_POWER_DOMAIN is not set
+CONFIG_SPL_RAM_SUPPORT=y
+CONFIG_SPL_RAM_DEVICE=y
+# CONFIG_SPL_REMOTEPROC is not set
+# CONFIG_SPL_RTC_SUPPORT is not set
+# CONFIG_SPL_SATA_SUPPORT is not set
+CONFIG_SPL_SPI_FLASH_TINY=y
+CONFIG_SPL_SPI_LOAD=y
+CONFIG_SYS_SPI_U_BOOT_OFFS=0x60000
+# CONFIG_SPL_THERMAL is not set
+# CONFIG_SPL_USB_HOST_SUPPORT is not set
+# CONFIG_SPL_USB_GADGET is not set
+CONFIG_SPL_WATCHDOG_SUPPORT=y
+# CONFIG_SPL_YMODEM_SUPPORT is not set
+# CONFIG_SPL_AM33XX_ENABLE_RTC32K_OSC is not set
+# CONFIG_SPL_OPTEE is not set
+
+#
+# Command line interface
+#
+CONFIG_CMDLINE=y
+CONFIG_HUSH_PARSER=y
+CONFIG_CMDLINE_EDITING=y
+CONFIG_AUTO_COMPLETE=y
+CONFIG_SYS_LONGHELP=y
+CONFIG_SYS_PROMPT="MitySOM-5CSx # "
+CONFIG_SYS_XTRACE="y"
+
+#
+# Autoboot options
+#
+CONFIG_AUTOBOOT=y
+# CONFIG_AUTOBOOT_KEYED is not set
+# CONFIG_AUTOBOOT_USE_MENUKEY is not set
+
+#
+# Commands
+#
+
+#
+# Info commands
+#
+CONFIG_CMD_BDI=y
+# CONFIG_CMD_CONFIG is not set
+CONFIG_CMD_CONSOLE=y
+# CONFIG_CMD_CPU is not set
+# CONFIG_CMD_LICENSE is not set
+
+#
+# Boot commands
+#
+CONFIG_CMD_BOOTD=y
+CONFIG_CMD_BOOTM=y
+CONFIG_CMD_BOOTZ=y
+CONFIG_CMD_BOOTEFI=y
+CONFIG_BOOTM_LINUX=y
+CONFIG_BOOTM_NETBSD=y
+# CONFIG_BOOTM_OPENRTOS is not set
+# CONFIG_BOOTM_OSE is not set
+CONFIG_BOOTM_PLAN9=y
+CONFIG_BOOTM_RTEMS=y
+CONFIG_BOOTM_VXWORKS=y
+CONFIG_CMD_BOOTEFI_HELLO_COMPILE=y
+# CONFIG_CMD_BOOTEFI_HELLO is not set
+# CONFIG_CMD_BOOTEFI_SELFTEST is not set
+# CONFIG_CMD_BOOTMENU is not set
+# CONFIG_CMD_DTIMG is not set
+CONFIG_CMD_ELF=y
+CONFIG_CMD_FDT=y
+CONFIG_CMD_GO=y
+CONFIG_CMD_RUN=y
+CONFIG_CMD_IMI=y
+# CONFIG_CMD_IMLS is not set
+CONFIG_CMD_XIMG=y
+# CONFIG_CMD_SPL is not set
+# CONFIG_CMD_FITUPD is not set
+# CONFIG_CMD_THOR_DOWNLOAD is not set
+# CONFIG_CMD_ZBOOT is not set
+
+#
+# Environment commands
+#
+CONFIG_CMD_ASKENV=y
+CONFIG_CMD_EXPORTENV=y
+CONFIG_CMD_IMPORTENV=y
+CONFIG_CMD_EDITENV=y
+CONFIG_CMD_GREPENV=y
+CONFIG_CMD_SAVEENV=y
+# CONFIG_CMD_ERASEENV is not set
+CONFIG_CMD_ENV_EXISTS=y
+# CONFIG_CMD_ENV_CALLBACK is not set
+# CONFIG_CMD_ENV_FLAGS is not set
+CONFIG_CMD_NVEDIT_EFI=y
+# CONFIG_CMD_NVEDIT_INFO is not set
+
+#
+# Memory commands
+#
+# CONFIG_CMD_BINOP is not set
+CONFIG_CMD_CRC32=y
+CONFIG_CRC32_VERIFY=y
+CONFIG_CMD_EEPROM=y
+# CONFIG_CMD_EEPROM_LAYOUT is not set
+# CONFIG_LOOPW is not set
+# CONFIG_CMD_MD5SUM is not set
+# CONFIG_CMD_MEMINFO is not set
+CONFIG_CMD_MEMORY=y
+# CONFIG_MX_CYCLIC is not set
+CONFIG_CMD_RANDOM=y
+CONFIG_CMD_MEMTEST=y
+# CONFIG_SYS_ALT_MEMTEST is not set
+# CONFIG_CMD_MX_CYCLIC is not set
+# CONFIG_CMD_SHA1SUM is not set
+# CONFIG_CMD_STRINGS is not set
+
+#
+# Compression commands
+#
+# CONFIG_CMD_LZMADEC is not set
+CONFIG_CMD_UNZIP=y
+# CONFIG_CMD_ZIP is not set
+
+#
+# Device access commands
+#
+# CONFIG_CMD_ARMFLASH is not set
+# CONFIG_CMD_ADC is not set
+# CONFIG_CMD_BCB is not set
+# CONFIG_CMD_BIND is not set
+# CONFIG_CMD_CLK is not set
+# CONFIG_CMD_DEMO is not set
+CONFIG_CMD_DFU=y
+CONFIG_CMD_DM=y
+# CONFIG_CMD_FDC is not set
+# CONFIG_CMD_FLASH is not set
+CONFIG_CMD_FPGA=y
+# CONFIG_CMD_FPGA_LOADBP is not set
+# CONFIG_CMD_FPGA_LOADFS is not set
+# CONFIG_CMD_FPGA_LOADMK is not set
+# CONFIG_CMD_FPGA_LOADP is not set
+# CONFIG_CMD_FPGA_LOAD_SECURE is not set
+# CONFIG_CMD_FPGAD is not set
+# CONFIG_CMD_FUSE is not set
+CONFIG_CMD_GPIO=y
+# CONFIG_CMD_GPT is not set
+# CONFIG_RANDOM_UUID is not set
+# CONFIG_CMD_IDE is not set
+# CONFIG_CMD_IO is not set
+# CONFIG_CMD_IOTRACE is not set
+CONFIG_CMD_I2C=y
+CONFIG_CMD_LOADB=y
+CONFIG_CMD_LOADS=y
+CONFIG_CMD_MMC=y
+# CONFIG_CMD_MMC_RPMB is not set
+# CONFIG_CMD_MMC_SWRITE is not set
+# CONFIG_CMD_MTD is not set
+# CONFIG_CMD_NAND is not set
+# CONFIG_CMD_ONENAND is not set
+# CONFIG_CMD_OSD is not set
+CONFIG_CMD_PART=y
+# CONFIG_CMD_PCI is not set
+# CONFIG_CMD_PINMUX is not set
+# CONFIG_CMD_POWEROFF is not set
+# CONFIG_CMD_READ is not set
+# CONFIG_CMD_SATA is not set
+# CONFIG_CMD_SAVES is not set
+# CONFIG_CMD_SCSI is not set
+# CONFIG_CMD_SDRAM is not set
+CONFIG_CMD_SF=y
+# CONFIG_CMD_SF_TEST is not set
+CONFIG_CMD_SPI=y
+CONFIG_DEFAULT_SPI_BUS=0
+CONFIG_DEFAULT_SPI_MODE=0
+# CONFIG_CMD_TSI148 is not set
+# CONFIG_CMD_UNIVERSE is not set
+CONFIG_CMD_USB=y
+# CONFIG_CMD_USB_SDP is not set
+CONFIG_CMD_USB_MASS_STORAGE=y
+
+#
+# Shell scripting commands
+#
+CONFIG_CMD_ECHO=y
+CONFIG_CMD_ITEST=y
+CONFIG_CMD_SOURCE=y
+CONFIG_CMD_SETEXPR=y
+
+#
+# Android support commands
+#
+CONFIG_CMD_NET=y
+CONFIG_CMD_BOOTP=y
+CONFIG_CMD_DHCP=y
+CONFIG_BOOTP_BOOTPATH=y
+CONFIG_BOOTP_DNS=y
+# CONFIG_BOOTP_DNS2 is not set
+CONFIG_BOOTP_GATEWAY=y
+CONFIG_BOOTP_HOSTNAME=y
+# CONFIG_BOOTP_PREFER_SERVERIP is not set
+CONFIG_BOOTP_SUBNETMASK=y
+# CONFIG_BOOTP_NTPSERVER is not set
+# CONFIG_CMD_PCAP is not set
+CONFIG_BOOTP_PXE=y
+CONFIG_BOOTP_PXE_CLIENTARCH=0x15
+CONFIG_BOOTP_VCI_STRING="U-Boot.armv7"
+CONFIG_CMD_TFTPBOOT=y
+# CONFIG_CMD_TFTPPUT is not set
+# CONFIG_CMD_TFTPSRV is not set
+CONFIG_NET_TFTP_VARS=y
+# CONFIG_CMD_RARP is not set
+CONFIG_CMD_NFS=y
+CONFIG_CMD_MII=y
+CONFIG_CMD_PING=y
+# CONFIG_CMD_CDP is not set
+# CONFIG_CMD_SNTP is not set
+# CONFIG_CMD_DNS is not set
+# CONFIG_CMD_LINK_LOCAL is not set
+# CONFIG_CMD_ETHSW is not set
+CONFIG_CMD_PXE=y
+# CONFIG_CMD_WOL is not set
+
+#
+# Misc commands
+#
+# CONFIG_CMD_BSP is not set
+# CONFIG_CMD_BKOPS_ENABLE is not set
+CONFIG_CMD_BLOCK_CACHE=y
+CONFIG_CMD_CACHE=y
+# CONFIG_CMD_CONITRACE is not set
+# CONFIG_CMD_EFIDEBUG is not set
+# CONFIG_CMD_EXCEPTION is not set
+CONFIG_CMD_DATE=y
+# CONFIG_CMD_TIME is not set
+# CONFIG_CMD_GETTIME is not set
+CONFIG_CMD_MISC=y
+# CONFIG_MP is not set
+# CONFIG_CMD_TIMER is not set
+# CONFIG_CMD_QFW is not set
+# CONFIG_CMD_TERMINAL is not set
+# CONFIG_CMD_UUID is not set
+
+#
+# TI specific command line interface
+#
+# CONFIG_CMD_DDR3 is not set
+
+#
+# Power commands
+#
+
+#
+# Security commands
+#
+# CONFIG_CMD_AES is not set
+# CONFIG_CMD_BLOB is not set
+# CONFIG_CMD_HASH is not set
+
+#
+# Firmware commands
+#
+
+#
+# Filesystem commands
+#
+# CONFIG_CMD_BTRFS is not set
+CONFIG_CMD_EXT2=y
+CONFIG_CMD_EXT4=y
+CONFIG_CMD_EXT4_WRITE=y
+CONFIG_CMD_FAT=y
+CONFIG_CMD_FS_GENERIC=y
+# CONFIG_CMD_FS_UUID is not set
+# CONFIG_CMD_JFFS2 is not set
+CONFIG_CMD_MTDPARTS=y
+CONFIG_MTDIDS_DEFAULT="nor0=ff705000.spi.0"
+CONFIG_MTDPARTS_DEFAULT="mtdparts=ff705000.spi.0:1m(u-boot),256k(env1),256k(env2),14848k(boot),16m(rootfs),-@1536k(UBI)0"
+# CONFIG_CMD_MTDPARTS_SPREAD is not set
+# CONFIG_CMD_REISER is not set
+# CONFIG_CMD_ZFS is not set
+
+#
+# Debug commands
+#
+# CONFIG_CMD_BEDBUG is not set
+# CONFIG_CMD_DIAG is not set
+# CONFIG_CMD_LOG is not set
+# CONFIG_CMD_TRACE is not set
+# CONFIG_CMD_UBI is not set
+
+#
+# Partition Types
+#
+CONFIG_PARTITIONS=y
+# CONFIG_MAC_PARTITION is not set
+# CONFIG_SPL_MAC_PARTITION is not set
+CONFIG_DOS_PARTITION=y
+CONFIG_SPL_DOS_PARTITION=y
+# CONFIG_ISO_PARTITION is not set
+# CONFIG_SPL_ISO_PARTITION is not set
+# CONFIG_AMIGA_PARTITION is not set
+# CONFIG_SPL_AMIGA_PARTITION is not set
+# CONFIG_EFI_PARTITION is not set
+# CONFIG_SPL_EFI_PARTITION is not set
+CONFIG_PARTITION_UUIDS=y
+# CONFIG_SPL_PARTITION_UUIDS is not set
+CONFIG_SUPPORT_OF_CONTROL=y
+CONFIG_DTC=y
+
+#
+# Device Tree Control
+#
+CONFIG_OF_CONTROL=y
+# CONFIG_OF_BOARD_FIXUP is not set
+CONFIG_SPL_OF_CONTROL=y
+# CONFIG_OF_LIVE is not set
+CONFIG_OF_SEPARATE=y
+# CONFIG_OF_EMBED is not set
+# CONFIG_OF_BOARD is not set
+# CONFIG_OF_PRIOR_STAGE is not set
+# CONFIG_MULTI_DTB_FIT is not set
+CONFIG_OF_SPL_REMOVE_PROPS="pinctrl-0 pinctrl-names clocks clock-names interrupt-parent interrupts"
+# CONFIG_SPL_OF_PLATDATA is not set
+CONFIG_MKIMAGE_DTC_PATH="dtc"
+
+#
+# Environment
+#
+# CONFIG_ENV_IS_NOWHERE is not set
+# CONFIG_ENV_IS_IN_EEPROM is not set
+# CONFIG_ENV_IS_IN_FAT is not set
+# CONFIG_ENV_IS_IN_EXT4 is not set
+# CONFIG_ENV_IS_IN_FLASH is not set
+CONFIG_ENV_IS_IN_MMC=y
+# CONFIG_ENV_IS_IN_NAND is not set
+# CONFIG_ENV_IS_IN_NVRAM is not set
+# CONFIG_ENV_IS_IN_ONENAND is not set
+# CONFIG_ENV_IS_IN_REMOTE is not set
+# CONFIG_ENV_IS_IN_SPI_FLASH is not set
+# CONFIG_ENV_IS_IN_UBI is not set
+# CONFIG_USE_DEFAULT_ENV_FILE is not set
+# CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG is not set
+CONFIG_NET=y
+CONFIG_NET_RANDOM_ETHADDR=y
+# CONFIG_NETCONSOLE is not set
+# CONFIG_IP_DEFRAG is not set
+CONFIG_TFTP_BLOCKSIZE=512
+
+#
+# Device Drivers
+#
+
+#
+# Generic Driver Options
+#
+CONFIG_DM=y
+CONFIG_SPL_DM=y
+CONFIG_DM_WARN=y
+# CONFIG_DM_DEBUG is not set
+CONFIG_DM_DEVICE_REMOVE=y
+# CONFIG_SPL_DM_DEVICE_REMOVE is not set
+CONFIG_DM_STDIO=y
+CONFIG_DM_SEQ_ALIAS=y
+CONFIG_SPL_DM_SEQ_ALIAS=y
+CONFIG_REGMAP=y
+# CONFIG_SPL_REGMAP is not set
+CONFIG_SYSCON=y
+# CONFIG_DEVRES is not set
+CONFIG_SIMPLE_BUS=y
+CONFIG_SPL_SIMPLE_BUS=y
+CONFIG_OF_TRANSLATE=y
+# CONFIG_SPL_OF_TRANSLATE is not set
+# CONFIG_TRANSLATION_OFFSET is not set
+CONFIG_DM_DEV_READ_INLINE=y
+# CONFIG_ADC is not set
+# CONFIG_ADC_EXYNOS is not set
+# CONFIG_ADC_SANDBOX is not set
+# CONFIG_SARADC_MESON is not set
+# CONFIG_SARADC_ROCKCHIP is not set
+# CONFIG_SATA is not set
+# CONFIG_SCSI_AHCI is not set
+
+#
+# SATA/SCSI device support
+#
+# CONFIG_DWC_AHSATA is not set
+# CONFIG_FSL_SATA is not set
+# CONFIG_MVSATA_IDE is not set
+# CONFIG_SATA_MV is not set
+# CONFIG_SATA_SIL is not set
+# CONFIG_SATA_SIL3114 is not set
+# CONFIG_AXI is not set
+CONFIG_BLK=y
+CONFIG_HAVE_BLOCK_DEVICE=y
+CONFIG_SPL_BLK=y
+CONFIG_BLOCK_CACHE=y
+# CONFIG_SPL_BLOCK_CACHE is not set
+# CONFIG_IDE is not set
+# CONFIG_BOOTCOUNT_LIMIT is not set
+
+#
+# Cache Controller drivers
+#
+CONFIG_CACHE=y
+CONFIG_L2X0_CACHE=y
+
+#
+# Clock
+#
+# CONFIG_CLK is not set
+# CONFIG_SPL_CLK_CCF is not set
+# CONFIG_CLK_CCF is not set
+# CONFIG_CPU is not set
+
+#
+# Hardware crypto devices
+#
+# CONFIG_FSL_CAAM is not set
+# CONFIG_SYS_FSL_SEC_BE is not set
+# CONFIG_SYS_FSL_SEC_LE is not set
+CONFIG_SPL_ALTERA_SDRAM=y
+
+#
+# Demo for driver model
+#
+# CONFIG_DM_DEMO is not set
+# CONFIG_BOARD is not set
+
+#
+# DFU support
+#
+CONFIG_DFU=y
+CONFIG_DFU_OVER_USB=y
+# CONFIG_DFU_TFTP is not set
+CONFIG_DFU_MMC=y
+# CONFIG_DFU_NAND is not set
+# CONFIG_DFU_RAM is not set
+# CONFIG_DFU_SF is not set
+
+#
+# DMA Support
+#
+# CONFIG_DMA is not set
+# CONFIG_TI_EDMA3 is not set
+
+#
+# Fastboot support
+#
+# CONFIG_USB_FUNCTION_FASTBOOT is not set
+# CONFIG_UDP_FUNCTION_FASTBOOT is not set
+# CONFIG_FIRMWARE is not set
+
+#
+# FPGA support
+#
+CONFIG_FPGA=y
+CONFIG_FPGA_ALTERA=y
+CONFIG_FPGA_SOCFPGA=y
+# CONFIG_FPGA_CYCLON2 is not set
+# CONFIG_FPGA_INTEL_PR is not set
+# CONFIG_FPGA_XILINX is not set
+
+#
+# GPIO Support
+#
+CONFIG_DM_GPIO=y
+# CONFIG_GPIO_HOG is not set
+# CONFIG_ALTERA_PIO is not set
+CONFIG_DWAPB_GPIO=y
+# CONFIG_AT91_GPIO is not set
+# CONFIG_ATMEL_PIO4 is not set
+# CONFIG_DA8XX_GPIO is not set
+# CONFIG_INTEL_BROADWELL_GPIO is not set
+# CONFIG_INTEL_ICH6_GPIO is not set
+# CONFIG_IMX_RGPIO2P is not set
+# CONFIG_HSDK_CREG_GPIO is not set
+# CONFIG_LPC32XX_GPIO is not set
+# CONFIG_MSM_GPIO is not set
+# CONFIG_MXC_GPIO is not set
+# CONFIG_MXS_GPIO is not set
+# CONFIG_CMD_PCA953X is not set
+# CONFIG_PCF8575_GPIO is not set
+# CONFIG_ROCKCHIP_GPIO is not set
+# CONFIG_XILINX_GPIO is not set
+# CONFIG_CMD_TCA642X is not set
+# CONFIG_TEGRA_GPIO is not set
+# CONFIG_TEGRA186_GPIO is not set
+# CONFIG_VYBRID_GPIO is not set
+# CONFIG_DM_74X164 is not set
+# CONFIG_DM_PCA953X is not set
+# CONFIG_SPL_DM_PCA953X is not set
+# CONFIG_MPC8XXX_GPIO is not set
+
+#
+# Hardware Spinlock Support
+#
+# CONFIG_DM_HWSPINLOCK is not set
+
+#
+# I2C support
+#
+CONFIG_DM_I2C=y
+# CONFIG_I2C_SET_DEFAULT_BUS_NUM is not set
+# CONFIG_DM_I2C_GPIO is not set
+# CONFIG_SYS_I2C_FSL is not set
+CONFIG_SYS_I2C_DW=y
+# CONFIG_SYS_I2C_INTEL is not set
+# CONFIG_SYS_I2C_IMX_LPI2C is not set
+# CONFIG_SYS_I2C_MXC is not set
+# CONFIG_SYS_I2C_ROCKCHIP is not set
+# CONFIG_SYS_I2C_MVTWSI is not set
+CONFIG_SYS_I2C_BUS_MAX=4
+# CONFIG_SYS_I2C_XILINX_XIIC is not set
+# CONFIG_SYS_I2C_IHS is not set
+# CONFIG_I2C_MUX is not set
+CONFIG_INPUT=y
+# CONFIG_SPL_INPUT is not set
+# CONFIG_DM_KEYBOARD is not set
+# CONFIG_SPL_DM_KEYBOARD is not set
+# CONFIG_CROS_EC_KEYB is not set
+# CONFIG_TEGRA_KEYBOARD is not set
+# CONFIG_TWL4030_INPUT is not set
+
+#
+# LED Support
+#
+# CONFIG_LED is not set
+# CONFIG_SPL_LED is not set
+# CONFIG_LED_STATUS is not set
+
+#
+# Mailbox Controller Support
+#
+# CONFIG_DM_MAILBOX is not set
+
+#
+# Memory Controller drivers
+#
+
+#
+# Multifunction device drivers
+#
+CONFIG_MISC=y
+# CONFIG_SPL_MISC is not set
+# CONFIG_ALTERA_SYSID is not set
+# CONFIG_ATSHA204A is not set
+# CONFIG_ROCKCHIP_EFUSE is not set
+# CONFIG_VEXPRESS_CONFIG is not set
+# CONFIG_CROS_EC is not set
+# CONFIG_SPL_CROS_EC is not set
+# CONFIG_DS4510 is not set
+# CONFIG_FSL_SEC_MON is not set
+# CONFIG_NUVOTON_NCT6102D is not set
+# CONFIG_PWRSEQ is not set
+# CONFIG_PCA9551_LED is not set
+# CONFIG_TWL4030_LED is not set
+# CONFIG_WINBOND_W83627 is not set
+CONFIG_I2C_EEPROM=y
+# CONFIG_SPL_I2C_EEPROM is not set
+CONFIG_ZYNQ_GEM_I2C_MAC_OFFSET=0x0
+CONFIG_SYS_I2C_EEPROM_ADDR=0x50
+CONFIG_SYS_I2C_EEPROM_BUS=0
+CONFIG_SYS_EEPROM_SIZE=2048
+CONFIG_SYS_EEPROM_PAGE_WRITE_BITS=4
+CONFIG_SYS_EEPROM_PAGE_WRITE_DELAY_MS=5
+CONFIG_SYS_I2C_EEPROM_ADDR_LEN=1
+CONFIG_SYS_I2C_EEPROM_ADDR_OVERFLOW=3
+# CONFIG_GDSYS_RXAUI_CTRL is not set
+# CONFIG_GDSYS_IOEP is not set
+# CONFIG_MPC83XX_SERDES is not set
+# CONFIG_FS_LOADER is not set
+# CONFIG_GDSYS_SOC is not set
+# CONFIG_IHS_FPGA is not set
+
+#
+# MMC Host controller Support
+#
+CONFIG_MMC=y
+CONFIG_MMC_WRITE=y
+# CONFIG_MMC_BROKEN_CD is not set
+CONFIG_DM_MMC=y
+CONFIG_SPL_DM_MMC=y
+# CONFIG_MMC_SPI is not set
+# CONFIG_ARM_PL180_MMCI is not set
+CONFIG_MMC_QUIRKS=y
+CONFIG_MMC_HW_PARTITIONING=y
+# CONFIG_SUPPORT_EMMC_RPMB is not set
+# CONFIG_SUPPORT_EMMC_BOOT is not set
+# CONFIG_MMC_IO_VOLTAGE is not set
+# CONFIG_SPL_MMC_IO_VOLTAGE is not set
+# CONFIG_MMC_HS400_ES_SUPPORT is not set
+# CONFIG_SPL_MMC_HS400_ES_SUPPORT is not set
+# CONFIG_MMC_HS400_SUPPORT is not set
+# CONFIG_SPL_MMC_HS400_SUPPORT is not set
+# CONFIG_MMC_HS200_SUPPORT is not set
+# CONFIG_SPL_MMC_HS200_SUPPORT is not set
+CONFIG_MMC_VERBOSE=y
+# CONFIG_MMC_TRACE is not set
+CONFIG_MMC_DW=y
+# CONFIG_MMC_DW_K3 is not set
+# CONFIG_MMC_DW_ROCKCHIP is not set
+CONFIG_MMC_DW_SOCFPGA=y
+# CONFIG_MMC_MXC is not set
+# CONFIG_MMC_PCI is not set
+# CONFIG_MMC_OMAP_HS is not set
+# CONFIG_MMC_SDHCI is not set
+# CONFIG_STM32_SDMMC2 is not set
+# CONFIG_FTSDC010 is not set
+# CONFIG_FSL_ESDHC is not set
+# CONFIG_FSL_ESDHC_IMX is not set
+
+#
+# MTD Support
+#
+# CONFIG_MTD is not set
+# CONFIG_MTD_NOR_FLASH is not set
+CONFIG_MTD_DEVICE=y
+# CONFIG_FLASH_CFI_DRIVER is not set
+# CONFIG_NAND is not set
+
+#
+# SPI Flash Support
+#
+CONFIG_DM_SPI_FLASH=y
+CONFIG_SPI_FLASH=y
+CONFIG_SF_DEFAULT_BUS=0
+CONFIG_SF_DEFAULT_CS=0
+CONFIG_SF_DEFAULT_MODE=3
+CONFIG_SF_DEFAULT_SPEED=1000000
+# CONFIG_SPI_FLASH_SFDP_SUPPORT is not set
+# CONFIG_SPI_FLASH_BAR is not set
+# CONFIG_SF_DUAL_FLASH is not set
+# CONFIG_SPI_FLASH_ATMEL is not set
+# CONFIG_SPI_FLASH_EON is not set
+# CONFIG_SPI_FLASH_GIGADEVICE is not set
+# CONFIG_SPI_FLASH_ISSI is not set
+CONFIG_SPI_FLASH_MACRONIX=y
+CONFIG_SPI_FLASH_SPANSION=y
+CONFIG_SPI_FLASH_STMICRO=y
+# CONFIG_SPI_FLASH_SST is not set
+# CONFIG_SPI_FLASH_WINBOND is not set
+# CONFIG_SPI_FLASH_XMC is not set
+# CONFIG_SPI_FLASH_USE_4K_SECTORS is not set
+# CONFIG_SPI_FLASH_DATAFLASH is not set
+# CONFIG_SPI_FLASH_MTD is not set
+
+#
+# UBI support
+#
+# CONFIG_UBI_SILENCE_MSG is not set
+# CONFIG_MTD_UBI is not set
+# CONFIG_BITBANGMII is not set
+# CONFIG_MV88E6352_SWITCH is not set
+CONFIG_PHYLIB=y
+# CONFIG_PHY_ADDR_ENABLE is not set
+# CONFIG_B53_SWITCH is not set
+# CONFIG_MV88E61XX_SWITCH is not set
+# CONFIG_PHYLIB_10G is not set
+# CONFIG_PHY_AQUANTIA is not set
+# CONFIG_PHY_ATHEROS is not set
+# CONFIG_PHY_BROADCOM is not set
+# CONFIG_PHY_CORTINA is not set
+# CONFIG_PHY_DAVICOM is not set
+# CONFIG_PHY_ET1011C is not set
+# CONFIG_PHY_LXT is not set
+# CONFIG_PHY_MARVELL is not set
+# CONFIG_PHY_MESON_GXL is not set
+CONFIG_PHY_MICREL=y
+CONFIG_PHY_MICREL_KSZ90X1=y
+# CONFIG_PHY_MICREL_KSZ8XXX is not set
+# CONFIG_PHY_MSCC is not set
+# CONFIG_PHY_NATSEMI is not set
+# CONFIG_PHY_REALTEK is not set
+# CONFIG_PHY_SMSC is not set
+# CONFIG_PHY_TERANETICS is not set
+# CONFIG_PHY_TI is not set
+CONFIG_PHY_VITESSE=y
+# CONFIG_PHY_XILINX is not set
+# CONFIG_PHY_FIXED is not set
+# CONFIG_FSL_PFE is not set
+CONFIG_DM_ETH=y
+# CONFIG_DM_MDIO is not set
+CONFIG_NETDEVICES=y
+CONFIG_PHY_GIGE=y
+# CONFIG_ALTERA_TSE is not set
+# CONFIG_BCM_SF2_ETH is not set
+# CONFIG_DWC_ETH_QOS is not set
+# CONFIG_E1000 is not set
+CONFIG_ETH_DESIGNWARE=y
+CONFIG_ETH_DESIGNWARE_SOCFPGA=y
+# CONFIG_ETHOC is not set
+# CONFIG_FMAN_ENET is not set
+# CONFIG_FTMAC100 is not set
+# CONFIG_FTGMAC100 is not set
+# CONFIG_MACB is not set
+# CONFIG_RGMII is not set
+CONFIG_MII=y
+# CONFIG_RTL8139 is not set
+# CONFIG_RTL8169 is not set
+# CONFIG_SMC911X is not set
+# CONFIG_SUN7I_GMAC is not set
+# CONFIG_SUN4I_EMAC is not set
+# CONFIG_SUN8I_EMAC is not set
+# CONFIG_SH_ETHER is not set
+# CONFIG_DRIVER_TI_CPSW is not set
+# CONFIG_DRIVER_TI_EMAC is not set
+# CONFIG_DRIVER_TI_KEYSTONE_NET is not set
+# CONFIG_GMAC_ROCKCHIP is not set
+# CONFIG_SYS_DPAA_QBMAN is not set
+# CONFIG_TSEC_ENET is not set
+# CONFIG_MEDIATEK_ETH is not set
+# CONFIG_HIGMACV300_ETH is not set
+# CONFIG_PCI is not set
+
+#
+# PCI Endpoint
+#
+# CONFIG_PCI_ENDPOINT is not set
+
+#
+# PHY Subsystem
+#
+# CONFIG_PHY is not set
+# CONFIG_SPL_PHY is not set
+# CONFIG_MVEBU_COMPHY_SUPPORT is not set
+
+#
+# Pin controllers
+#
+# CONFIG_PINCTRL is not set
+# CONFIG_SPL_PINCTRL is not set
+
+#
+# Power
+#
+
+#
+# Power Domain Support
+#
+# CONFIG_POWER_DOMAIN is not set
+# CONFIG_DM_PMIC is not set
+# CONFIG_PMIC_AS3722 is not set
+# CONFIG_POWER_MC34VR500 is not set
+# CONFIG_DM_REGULATOR is not set
+# CONFIG_DM_PWM is not set
+# CONFIG_PWM_IMX is not set
+# CONFIG_PWM_SANDBOX is not set
+# CONFIG_U_QE is not set
+CONFIG_RAM=y
+CONFIG_SPL_RAM=y
+# CONFIG_STM32_SDRAM is not set
+# CONFIG_MPC83XX_SDRAM is not set
+
+#
+# Remote Processor drivers
+#
+
+#
+# Reset Controller Support
+#
+CONFIG_DM_RESET=y
+CONFIG_RESET_SOCFPGA=y
+# CONFIG_RESET_HISILICON is not set
+
+#
+# Real Time Clock
+#
+CONFIG_DM_RTC=y
+# CONFIG_SPL_DM_RTC is not set
+# CONFIG_RTC_ENABLE_32KHZ_OUTPUT is not set
+# CONFIG_RTC_PCF2127 is not set
+# CONFIG_RTC_DS1307 is not set
+# CONFIG_RTC_ISL1208 is not set
+# CONFIG_RTC_RV3029 is not set
+# CONFIG_RTC_RV8803 is not set
+# CONFIG_RTC_RX8010SJ is not set
+# CONFIG_RTC_RX8025 is not set
+# CONFIG_RTC_PL031 is not set
+# CONFIG_RTC_MV is not set
+# CONFIG_RTC_S35392A is not set
+# CONFIG_RTC_MC146818 is not set
+# CONFIG_RTC_M41T62 is not set
+# CONFIG_RTC_STM32 is not set
+CONFIG_RTC_AB1805=y
+# CONFIG_SCSI is not set
+# CONFIG_DM_SCSI is not set
+
+#
+# Serial drivers
+#
+CONFIG_BAUDRATE=115200
+CONFIG_REQUIRE_SERIAL_CONSOLE=y
+# CONFIG_SPECIFY_CONSOLE_INDEX is not set
+CONFIG_SERIAL_PRESENT=y
+CONFIG_SPL_SERIAL_PRESENT=y
+CONFIG_DM_SERIAL=y
+# CONFIG_SERIAL_RX_BUFFER is not set
+# CONFIG_SERIAL_SEARCH_ALL is not set
+CONFIG_SPL_DM_SERIAL=y
+# CONFIG_TPL_DM_SERIAL is not set
+# CONFIG_ALTERA_JTAG_UART is not set
+# CONFIG_ALTERA_UART is not set
+# CONFIG_ARC_SERIAL is not set
+# CONFIG_ATMEL_USART is not set
+# CONFIG_BCM6345_SERIAL is not set
+# CONFIG_FSL_LINFLEXUART is not set
+# CONFIG_FSL_LPUART is not set
+# CONFIG_MVEBU_A3700_UART is not set
+# CONFIG_MCFUART is not set
+# CONFIG_NULLDEV_SERIAL is not set
+CONFIG_SYS_NS16550=y
+# CONFIG_PL01X_SERIAL is not set
+# CONFIG_MSM_SERIAL is not set
+# CONFIG_OMAP_SERIAL is not set
+# CONFIG_PXA_SERIAL is not set
+# CONFIG_SIFIVE_SERIAL is not set
+# CONFIG_MTK_SERIAL is not set
+# CONFIG_SMEM is not set
+
+#
+# Sound support
+#
+# CONFIG_SOUND is not set
+
+#
+# SOC (System On Chip) specific Drivers
+#
+# CONFIG_SOC_TI is not set
+CONFIG_SPI=y
+CONFIG_DM_SPI=y
+CONFIG_SPI_MEM=y
+# CONFIG_ALTERA_SPI is not set
+# CONFIG_ATCSPI200_SPI is not set
+# CONFIG_ATMEL_SPI is not set
+# CONFIG_BCMSTB_SPI is not set
+CONFIG_CADENCE_QSPI=y
+# CONFIG_CF_SPI is not set
+CONFIG_DESIGNWARE_SPI=y
+# CONFIG_EXYNOS_SPI is not set
+# CONFIG_FSL_DSPI is not set
+# CONFIG_ICH_SPI is not set
+# CONFIG_MPC8XXX_SPI is not set
+# CONFIG_MTK_SNFI_SPI is not set
+# CONFIG_MVEBU_A3700_SPI is not set
+# CONFIG_PL022_SPI is not set
+# CONFIG_ROCKCHIP_SPI is not set
+# CONFIG_SPI_SIFIVE is not set
+# CONFIG_SPI_SUNXI is not set
+# CONFIG_TEGRA114_SPI is not set
+# CONFIG_TEGRA20_SFLASH is not set
+# CONFIG_TEGRA20_SLINK is not set
+# CONFIG_TEGRA210_QSPI is not set
+# CONFIG_TI_QSPI is not set
+# CONFIG_XILINX_SPI is not set
+# CONFIG_SOFT_SPI is not set
+# CONFIG_FSL_ESPI is not set
+# CONFIG_FSL_QSPI is not set
+# CONFIG_SH_QSPI is not set
+# CONFIG_KIRKWOOD_SPI is not set
+# CONFIG_MXC_SPI is not set
+# CONFIG_MXS_SPI is not set
+# CONFIG_OMAP3_SPI is not set
+
+#
+# SPMI support
+#
+# CONFIG_SPMI is not set
+
+#
+# System reset device drivers
+#
+CONFIG_SYSRESET=y
+CONFIG_SPL_SYSRESET=y
+# CONFIG_SYSRESET_GPIO is not set
+CONFIG_SYSRESET_SOCFPGA=y
+# CONFIG_SYSRESET_SYSCON is not set
+# CONFIG_SYSRESET_WATCHDOG is not set
+# CONFIG_SYSRESET_MCP83XX is not set
+# CONFIG_TEE is not set
+# CONFIG_OPTEE is not set
+# CONFIG_DM_THERMAL is not set
+
+#
+# Timer Support
+#
+# CONFIG_TIMER is not set
+
+#
+# TPM support
+#
+CONFIG_USB=y
+CONFIG_DM_USB=y
+CONFIG_SPL_DM_USB=y
+# CONFIG_DM_USB_GADGET is not set
+# CONFIG_SPL_DM_USB_GADGET is not set
+
+#
+# USB Host Controller Drivers
+#
+CONFIG_USB_HOST=y
+# CONFIG_USB_XHCI_HCD is not set
+# CONFIG_USB_EHCI_HCD is not set
+# CONFIG_USB_OHCI_HCD is not set
+# CONFIG_USB_OHCI_PCI is not set
+# CONFIG_USB_UHCI_HCD is not set
+CONFIG_USB_DWC2=y
+CONFIG_USB_DWC2_BUFFER_SIZE=64
+# CONFIG_USB_R8A66597_HCD is not set
+# CONFIG_USB_DWC3 is not set
+
+#
+# Legacy MUSB Support
+#
+# CONFIG_USB_MUSB_HCD is not set
+# CONFIG_USB_MUSB_UDC is not set
+
+#
+# MUSB Controller Driver
+#
+# CONFIG_USB_MUSB_HOST is not set
+# CONFIG_USB_MUSB_GADGET is not set
+# CONFIG_USB_MUSB_DA8XX is not set
+# CONFIG_USB_MUSB_TI is not set
+# CONFIG_USB_MUSB_AM35X is not set
+# CONFIG_USB_MUSB_DSPS is not set
+# CONFIG_USB_MUSB_PIO_ONLY is not set
+
+#
+# USB Phy
+#
+# CONFIG_TWL4030_USB is not set
+# CONFIG_OMAP_USB_PHY is not set
+# CONFIG_ROCKCHIP_USB2_PHY is not set
+
+#
+# ULPI drivers
+#
+
+#
+# USB peripherals
+#
+CONFIG_USB_STORAGE=y
+# CONFIG_USB_KEYBOARD is not set
+CONFIG_USB_GADGET=y
+CONFIG_USB_GADGET_MANUFACTURER="altera"
+CONFIG_USB_GADGET_VENDOR_NUM=0x0525
+CONFIG_USB_GADGET_PRODUCT_NUM=0xa4a5
+# CONFIG_USB_GADGET_ATMEL_USBA is not set
+# CONFIG_USB_GADGET_BCM_UDC_OTG_PHY is not set
+CONFIG_USB_GADGET_DWC2_OTG=y
+# CONFIG_USB_GADGET_DWC2_OTG_PHY_BUS_WIDTH_8 is not set
+# CONFIG_CI_UDC is not set
+CONFIG_USB_GADGET_VBUS_DRAW=2
+CONFIG_USB_GADGET_DUALSPEED=y
+CONFIG_USB_GADGET_DOWNLOAD=y
+CONFIG_USB_FUNCTION_MASS_STORAGE=y
+# CONFIG_USB_FUNCTION_ROCKUSB is not set
+# CONFIG_USB_FUNCTION_SDP is not set
+# CONFIG_USB_FUNCTION_THOR is not set
+# CONFIG_USB_ETHER is not set
+# CONFIG_USB_HOST_ETHER is not set
+
+#
+# Graphics support
+#
+# CONFIG_DM_VIDEO is not set
+# CONFIG_SYS_WHITE_ON_BLACK is not set
+# CONFIG_NO_FB_CLEAR is not set
+
+#
+# TrueType Fonts
+#
+# CONFIG_VIDEO_VESA is not set
+# CONFIG_VIDEO_LCD_ANX9804 is not set
+# CONFIG_VIDEO_LCD_SSD2828 is not set
+# CONFIG_VIDEO_MVEBU is not set
+# CONFIG_I2C_EDID is not set
+# CONFIG_DISPLAY is not set
+# CONFIG_VIDEO_TEGRA20 is not set
+# CONFIG_VIDEO_BRIDGE is not set
+# CONFIG_VIDEO is not set
+# CONFIG_LCD is not set
+# CONFIG_VIDEO_SIMPLE is not set
+# CONFIG_VIDEO_DT_SIMPLEFB is not set
+# CONFIG_OSD is not set
+
+#
+# VirtIO Drivers
+#
+# CONFIG_VIRTIO_MMIO is not set
+
+#
+# 1-Wire support
+#
+# CONFIG_W1 is not set
+
+#
+# 1-wire EEPROM support
+#
+# CONFIG_W1_EEPROM is not set
+
+#
+# Watchdog Timer Support
+#
+# CONFIG_WATCHDOG is not set
+CONFIG_HW_WATCHDOG=y
+# CONFIG_WATCHDOG_RESET_DISABLE is not set
+# CONFIG_IMX_WATCHDOG is not set
+# CONFIG_ULP_WATCHDOG is not set
+# CONFIG_WDT is not set
+# CONFIG_SPL_WDT is not set
+# CONFIG_PHYS_TO_BUS is not set
+
+#
+# File systems
+#
+# CONFIG_FS_BTRFS is not set
+# CONFIG_FS_CBFS is not set
+# CONFIG_SPL_FS_CBFS is not set
+CONFIG_FS_EXT4=y
+CONFIG_EXT4_WRITE=y
+CONFIG_FS_FAT=y
+CONFIG_FAT_WRITE=y
+CONFIG_FS_FAT_MAX_CLUSTSIZE=65536
+# CONFIG_FS_JFFS2 is not set
+# CONFIG_UBIFS_SILENCE_MSG is not set
+# CONFIG_FS_CRAMFS is not set
+# CONFIG_YAFFS2 is not set
+
+#
+# Library routines
+#
+# CONFIG_BCH is not set
+# CONFIG_CC_OPTIMIZE_LIBS_FOR_SPEED is not set
+# CONFIG_DYNAMIC_CRC_TABLE is not set
+CONFIG_HAVE_PRIVATE_LIBGCC=y
+CONFIG_LIB_UUID=y
+CONFIG_PRINTF=y
+CONFIG_SPL_PRINTF=y
+CONFIG_SPRINTF=y
+CONFIG_SPL_SPRINTF=y
+CONFIG_STRTO=y
+CONFIG_SPL_STRTO=y
+# CONFIG_USE_PRIVATE_LIBGCC is not set
+CONFIG_SYS_HZ=1000
+CONFIG_USE_TINY_PRINTF=y
+# CONFIG_PANIC_HANG is not set
+CONFIG_REGEX=y
+CONFIG_LIB_RAND=y
+# CONFIG_LIB_HW_RAND is not set
+# CONFIG_SPL_TINY_MEMSET is not set
+# CONFIG_TPL_TINY_MEMSET is not set
+# CONFIG_BITREVERSE is not set
+# CONFIG_TRACE is not set
+# CONFIG_CMD_DHRYSTONE is not set
+
+#
+# Security support
+#
+# CONFIG_AES is not set
+# CONFIG_RSA is not set
+# CONFIG_TPM is not set
+# CONFIG_SPL_TPM is not set
+
+#
+# Android Verified Boot
+#
+
+#
+# Hashing Support
+#
+CONFIG_SHA1=y
+CONFIG_SHA256=y
+# CONFIG_SHA_HW_ACCEL is not set
+CONFIG_MD5=y
+
+#
+# Compression Support
+#
+# CONFIG_LZ4 is not set
+# CONFIG_LZMA is not set
+# CONFIG_LZO is not set
+CONFIG_GZIP=y
+CONFIG_ZLIB=y
+# CONFIG_ZSTD is not set
+# CONFIG_SPL_LZ4 is not set
+# CONFIG_SPL_LZO is not set
+# CONFIG_SPL_GZIP is not set
+# CONFIG_SPL_ZSTD is not set
+# CONFIG_ERRNO_STR is not set
+CONFIG_HEXDUMP=y
+CONFIG_OF_LIBFDT=y
+# CONFIG_OF_LIBFDT_OVERLAY is not set
+CONFIG_SPL_OF_LIBFDT=y
+# CONFIG_TPL_OF_LIBFDT is not set
+# CONFIG_FDT_FIXUP_PARTITIONS is not set
+
+#
+# System tables
+#
+CONFIG_GENERATE_SMBIOS_TABLE=y
+CONFIG_SMBIOS_MANUFACTURER="cl"
+CONFIG_EFI_LOADER=y
+CONFIG_EFI_GET_TIME=y
+# CONFIG_EFI_SET_TIME is not set
+CONFIG_EFI_DEVICE_PATH_TO_TEXT=y
+CONFIG_EFI_LOADER_HII=y
+CONFIG_EFI_UNICODE_COLLATION_PROTOCOL2=y
+CONFIG_EFI_UNICODE_CAPITALIZATION=y
+# CONFIG_EFI_UNICODE_COLLATION_PROTOCOL is not set
+CONFIG_EFI_PLATFORM_LANG_CODES="en-US"
+CONFIG_EFI_GRUB_ARM32_WORKAROUND=y
+# CONFIG_TEST_FDTDEC is not set
+# CONFIG_UNIT_TEST is not set
diff --git a/include/configs/socfpga_mitysom_5cse.h b/include/configs/socfpga_mitysom_5cse.h
new file mode 100644
index 0000000000..b08fac9193
--- /dev/null
+++ b/include/configs/socfpga_mitysom_5cse.h
@@ -0,0 +1,95 @@
+/*
+ *  Copyright (C) 2012 Altera Corporation <www.altera.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+#ifndef __CONFIG_CL_MITYSOM_5CS_H__
+#define __CONFIG_CL_MITYSOM_5CS_H__
+
+#include <asm/arch/base_addr_ac5.h>
+#include <asm/mach-types.h>
+
+/* Define machine type for Cyclone 5 */
+#define CONFIG_MACH_TYPE	MACH_TYPE_SOCFPGA_CYCLONE5
+
+/* Memory configuration
+ *
+ * For Cyclone V this is only used to set CONFIG_SYS_MEMTEST_END, which in
+ * turn is only used as the upper test bound by the mtest command--the "most
+ * useless" option for memory testing, according to doc/README.memory-test.
+ * Just use 32 MiB like our 2013 branch did.
+ */
+#define PHYS_SDRAM_1_SIZE		0x02000000
+
+/* Environment for SDMMC boot */
+#ifdef CONFIG_ENV_IS_IN_MMC
+#define CONFIG_SYS_MMC_ENV_DEV		0 /* device 0 */
+#define CONFIG_ENV_OFFSET		512 /* just after the MBR */
+#endif
+
+/* Environment for QSPI boot */
+#ifdef CONFIG_ENV_IS_IN_SPI_FLASH
+#define CONFIG_ENV_OFFSET		0x00040000 /* 256 KiB, after the SPL */
+#define CONFIG_ENV_SECT_SIZE		(64 * 1024)
+#endif
+
+/* I2C clock in MHz. Defaults to 166 MHz if we don't set it here */
+#ifndef __ASSEMBLY__
+extern unsigned int cm_get_l4_sp_clk_hz(void);
+#define IC_CLK	(cm_get_l4_sp_clk_hz() / 1000000)
+#endif
+
+/* If this isn't set and the environment variables bootm_size and
+ * bootm_mapsize aren't set either, Linux won't boot on the 2 GB SOM. Use
+ * the value from our 2013 branch.
+ *
+ * Initial Memory map size for Linux, minus 4k alignment for DFT blob
+ */
+#define CONFIG_SYS_BOOTMAPSZ	(64 * 1024 * 1024)
+
+/* Booting Linux */
+#define CONFIG_LOADADDR		0x01000000
+#define CONFIG_SYS_LOAD_ADDR	CONFIG_LOADADDR
+
+/* QSPI boot */
+#define FDT_SIZE		__stringify(0x00010000)
+#define KERNEL_SIZE		__stringify(0x005d0000)
+#define QSPI_FDT_ADDR		__stringify(0x00220000)
+#define QSPI_KERNEL_ADDR	__stringify(0x00230000)
+
+#define SOCFPGA_BOOT_SETTINGS \
+	"fdt_size=" FDT_SIZE "\0" \
+	"kernel_size=" KERNEL_SIZE "\0" \
+	"qspi_fdt_addr=" QSPI_FDT_ADDR "\0" \
+	"qspi_kernel_addr=" QSPI_KERNEL_ADDR "\0" \
+	"qspiboot=setenv bootargs earlycon " \
+		"root=/dev/mtdblock1 rw rootfstype=jffs2; " \
+		"bootz ${kernel_addr_r} - ${fdt_addr_r}\0" \
+	"qspiload=sf probe; " \
+		"sf read ${kernel_addr_r} ${qspi_kernel_addr} ${kernel_size}; " \
+		"sf read ${fdt_addr_r} ${qspi_fdt_addr} ${fdt_size}\0"
+
+/* The rest of the configuration is shared */
+#include <configs/socfpga_common.h>
+
+/*
+ * Defined in socfpga_common.h, but we don't use a redundant environment. When
+ * this is enabled, U-Boot expects an extra byte between the environment CRC
+ * and the environment data, which breaks the CRC check
+ */
+#ifdef CONFIG_SYS_REDUNDAND_ENVIRONMENT
+#undef CONFIG_SYS_REDUNDAND_ENVIRONMENT
+#endif
+
+#endif	/* __CONFIG_CL_MITYSOM_5CS_H__ */
